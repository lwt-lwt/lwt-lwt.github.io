{"version":3,"sources":["components/lib.tsx","auth-provider.ts","utils/index.ts","utils/http.ts","utils/use-async.ts","context/auth-context.tsx","assets/software-logo.svg","components/pin.tsx","utils/reorder.ts","utils/use-optimistic-options.ts","utils/project.ts","utils/url.ts","screens/project-list/util.ts","screens/project-list/list.tsx","utils/user.ts","components/id-select.tsx","components/user-select.tsx","screens/project-list/search-panel.tsx","screens/project-list/index.tsx","components/drag-and-drop.tsx","utils/kanban.ts","utils/task.ts","utils/task-type.ts","screens/kanban/util.ts","assets/task.svg","assets/bug.svg","screens/kanban/create-task.tsx","components/mark.tsx","screens/kanban/kanban-column.tsx","screens/kanban/create-kanban.tsx","components/task-type-select.tsx","screens/kanban/search-panel.tsx","screens/kanban/task-modal.tsx","screens/kanban/index.tsx","screens/epic/util.ts","screens/epic/create-epic.tsx","utils/epic.ts","screens/epic/index.tsx","screens/project/index.tsx","screens/project-list/project-modal.tsx","components/project-popover.tsx","components/user-popover.tsx","authenticated-app.tsx","components/error-boundary.ts","unauthenticated-app/login.tsx","unauthenticated-app/register.tsx","assets/logo.svg","assets/left.svg","assets/right.svg","unauthenticated-app/index.tsx","App.tsx","reportWebVitals.ts","context/index.tsx","index.tsx"],"names":["ScreenContainer","styled","div","ErrorBox","value","error","message","Text","type","ButtonNoPadding","Button","FullPage","FullPageErrorFallBack","FullPageLoading","size","Row","props","between","undefined","marginBottom","gap","apiUrl","process","localStorageKey","handleUserResponse","user","window","localStorage","setItem","token","logout","a","removeItem","cleanObject","object","result","Object","keys","forEach","key","isVoid","useDebounce","delay","useState","debouncedValue","setDebouncedValue","useEffect","timeout","setTimeout","clearTimeout","useDocumentTitle","title","keepOnUnmount","oldTitle","useRef","document","current","resetRoute","location","href","origin","http","endpoint","data","headers","customConfig","config","method","Authorization","toUpperCase","qs","stringify","body","JSON","fetch","then","response","status","auth","reload","Promise","reject","json","ok","useHttp","useAuth","useCallback","defaultInitialState","stat","defaultConfig","throwOnError","useSafeDispatch","dispatch","mountedRef","useMountedRef","useAsync","initialState","initialConfig","useReducer","state","action","safaDispatch","setData","setError","retry","setRetry","run","promise","runConfig","Error","catch","isIdle","isLoading","isError","isSuccess","bootstrapUser","getItem","AuthContext","React","createContext","displayName","_defs","_g","AuthProvider","callback","children","setUser","queryClient","useQueryClient","Provider","login","form","register","clear","context","useContext","_extends","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgSoftwareLogo","_ref","svgRef","titleId","viewBox","xmlns","focusable","className","ref","id","x1","y1","x2","y2","stopColor","offset","stroke","strokeWidth","fillRule","d","fill","ForwardRef","Pin","checked","onCheckedChange","restProps","count","onChange","num","reorder","fromId","referenceId","list","copiedList","movingItemIndex","findIndex","item","insertAfter","targetIndex","insertBefore","from","to","toItem","removedItem","splice","toIndex","useConfig","queryKey","onSuccess","invalidateQueries","onMutate","previousItems","getQueryData","setQueryData","old","onError","newItem","useDeleteConfig","filter","useEditConfig","map","useAddConfig","useProjects","param","client","useQuery","useEditProject","useMutation","params","useAddProject","useProject","enabled","Boolean","useUrlQueryParam","useSearchParams","searchParams","setSearchParams","useSetUrlSearchParam","stateKeys","useMemo","obj","filteredEntries","entries","includes","fromEntries","subset","setSearchParam","o","useProjectsSearchParamas","setParam","personId","Number","useProjectQuerykey","useProjectModal","projectCreate","setProjectModalOpen","editingProjectId","setEditingProjectId","editingProject","setUrlParams","projectModalOpen","open","close","startEdit","List","users","mutate","rowKey","pagination","columns","disabled","render","project","pin","sorter","b","name","localeCompare","String","dataIndex","find","created","dayjs","format","More","deleteProject","useDeleteProject","overlay","Item","onClick","Modal","confirm","content","okText","onOk","confirmDeleteProject","useUsers","IdSelect","defaultOptionName","options","toNumber","Option","option","isNaN","UserSelect","SearchPanel","style","layout","placeholder","evt","ProjectListScreen","loading","dataSource","whyDidYouRender","Drop","provided","isValidElement","cloneElement","droppableProps","innerRef","DropChild","forwardRef","Drag","draggableProps","dragHandleProps","useKanbans","useReorderKanban","useReorderKanbanConfig","useTasks","useReorderTask","kanbanId","toKanbanId","useReorderTaskConfig","useTaskTypes","useProjectIdInUrl","useLocation","pathname","match","useProjectInurl","useKanbanSearchParams","projectId","useKanbansQuerkey","useTasksSearchParams","debounceName","typeId","processorId","tagId","useTasksQuerkey","useTaskModal","editingTaskId","setEditingTaskId","useTask","editingTask","CreateTask","setName","addTask","useAddTask","mutateAsync","inputMode","setInputMode","submit","toggle","mode","onBlur","autoFocus","onPressEnter","Mark","keyword","arr","split","str","index","color","TaskTypeIcon","taskTypes","taskType","src","taskIcon","bugIcon","alt","TaskCard","task","cursor","kanban","useDeleteKanban","cancelText","KanbanColumn","allTasks","tasks","Container","TaskContainer","direction","droppableId","minHeight","taskIndex","draggableId","CreateKanban","addKanban","useAddKanban","TaskTypeSelect","width","labelCol","span","wrapperCol","TaskModal","useForm","useEditTask","editTask","editLoading","deleteTask","useDeleteTask","getFieldsValue","setFieldsValue","forceRender","onCancel","resetFields","confirmLoading","visible","initialValues","label","rules","required","textAlign","fontSize","KanbanScreen","currentProject","kanbans","kanbanIsLoading","onDragEnd","useDragEnd","ColumnsContainer","display","reorderKanban","reorderTask","destination","toId","fromKanbanId","fromTask","toTask","useEpicSearchParams","useEpicsQuerkey","CreateEpic","useAddEpic","addEpic","onFinish","values","onClose","destroyOnClose","htmlType","EpicScreen","epics","useEpics","deleteEpic","useDeleteEpic","epicCreateOpen","setEpicCreateOpen","overflowY","itemLayout","renderItem","epic","Meta","confirmDeleteEpic","description","start","end","epicId","ProjectScreen","routeType","units","useRouteType","Aside","selectedKeys","Main","path","element","replace","aside","ProjectModal","mutateLoading","ProjectPopover","projects","refetch","pinnedProjects","ContentContainer","onVisibleChange","placement","UserPopover","AuthenticatedApp","PageHeader","Header","HeaderLeft","HeaderRight","User","e","preventDefault","main","ErrorBoundary","fallbackRender","Component","LoginScreen","handleSubmit","LongButton","RegisterScreen","cpassword","password","UnauthenticatedApp","isRegister","setisRegister","justifyContent","Background","ShadowCard","Title","h2","Card","header","logo","left","right","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","AppProviders","QueryClientProvider","QueryClient","loadServer","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e0a51a9b.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\nimport { Button, Spin, Typography } from \"antd\";\r\nimport { DevTools } from \"jira-dev-tool\";\r\nimport React from \"react\";\r\n\r\nexport const ScreenContainer = styled.div`\r\npadding: 3.2rem;\r\nwidth: 100%;\r\ndisplay: flex;\r\nflex-direction: column;\r\n`\r\n\r\n// 类型守卫 value is Error :当符合后面的条件时，value就是error类型\r\nconst isError = (value: any):value is Error => value?.message\r\nexport const ErrorBox = ({ error }: { error?: unknown }) => {\r\n    if (isError(error)) {\r\n        return <Typography.Text type={'danger'}>{error?.message}</Typography.Text>\r\n    }\r\n    return null;\r\n}\r\n\r\n// 抽象出一个没有内边距的button按钮\r\nexport const ButtonNoPadding = styled(Button)`\r\npadding: 0;\r\n`\r\n\r\nconst FullPage = styled.div`\r\nheight: 100vh;\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\n`\r\n// 全局展示一个错误信息\r\nexport const FullPageErrorFallBack = ({ error }: { error: Error | null }) => <FullPage>\r\n    <DevTools />\r\n    <ErrorBox error={error}/>\r\n    {/* <Typography.Text type={'danger'}>{error?.message}</Typography.Text> */}\r\n</FullPage>\r\n\r\n// 全局展示一个加载的状态\r\nexport const FullPageLoading = () => <FullPage>\r\n    <Spin size={'large'}></Spin>\r\n</FullPage>\r\n\r\nexport const Row = styled.div<{\r\n    gap?: number | boolean;\r\n    between?: boolean;\r\n    marginBottom?: number;\r\n}>`\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: ${props => props.between ? \"space-between\" : undefined};\r\nmargin-bottom: ${props => props.marginBottom + 'rem'};\r\n/* 设置子元素的边距 */\r\n> * {\r\n    margin-top: 0 !important;\r\n    margin-bottom: 0 !important;\r\n    margin-right: ${props => typeof props.gap === 'number' ? props.gap + 'rem' : props.gap ? '2rem' : undefined};\r\n}\r\n`;\r\n","// 定义可以操控token的函数  \r\n// 模拟第三方服务\r\n// 在真实环境中,如果使用firebase第三方auth服务的话,本文件不需要开发者开发\r\nimport { User } from \"types/user\";\r\n\r\nconst apiUrl = process.env.REACT_APP_API_URL;\r\nconst localStorageKey = '__auth_provider_token__';\r\nexport const getToken = () => window.localStorage.getItem(localStorageKey);\r\nexport const handleUserResponse = ({ user }: { user: User }) => {\r\n    window.localStorage.setItem(localStorageKey, user.token || \"\")\r\n    return user;\r\n}\r\nexport const login = (data: { username: string, password: string }) => {\r\n    return fetch(`${apiUrl}/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n    }).then(\r\n        async (response: Response) => {\r\n            if (response.ok) {\r\n                return handleUserResponse(await response.json())\r\n            } else {\r\n                // return Promise.reject(data); 为了捕捉错误，传入的不应该是data\r\n                return Promise.reject(await response.json());\r\n            }\r\n        })\r\n}\r\nexport const register = (data: { username: string, password: string }) => {\r\n    return fetch(`${apiUrl}/register`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n    }).then(\r\n        async (response: Response) => {\r\n            if (response.ok) {\r\n                return handleUserResponse(await response.json())\r\n            } else {\r\n                // return Promise.reject(data);  为了捕捉错误，传入的不应该是data \r\n                return Promise.reject(await response.json());\r\n            }\r\n        })\r\n}\r\nexport const logout = async () => window.localStorage.removeItem(localStorageKey)","import { useEffect, useRef, useState } from 'react'\r\n\r\n// 注意value为零的情况,!!value的意思是把一个值转换为布尔值，一个叹号是对一个值求反，两个叹号是返回1其布尔值\r\nexport const isFalsy = (value: unknown) => (value === 0 ? false : !value);\r\n// 解决bug：如果值为false时的情况，isFalsy会将其删除，但是是有意义的，不能删除。如 {checked: false}的形式\r\n// value为undefined、null、空字符串是没有意义的\r\nexport const isVoid = (value: unknown) => value === undefined || value === null || value === ''\r\n\r\n// 在一个函数里，改变传入对象本身是不好的,因此需要对其进行复制\r\n/* \r\n进行解构时，不要直接写成object的形式，会出现错误————ts认为其是个空对象\r\nexport const cleanObject = (object: object) => {\r\n因此写清楚需要的形式是什么\r\n*/\r\nexport const cleanObject = (object?: { [key: string]: unknown }) => {\r\n    if (!object) {\r\n        return {}\r\n    }\r\n    const result = { ...object };\r\n    Object.keys(result).forEach(key => {\r\n        const value = result[key];\r\n        if (isVoid(value)) {\r\n            delete result[key];\r\n        }\r\n    })\r\n    return result;\r\n}\r\n\r\n// 自定义useMount，为了避免出现特别多的useEffect的空数组的情况\r\nexport const useMount = (callback: () => void) => {\r\n    useEffect(() => {\r\n        callback()\r\n        // TODO 依赖项里加上Callback会造成无限循环，这个和useCallback以及useMemo有关系\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n}\r\n\r\n// 在这里需要用泛型来解决value的类型以及该函数返回值类型的问题\r\nexport const useDebounce = <V>(value: V, delay?: number) => {\r\n    // 声明一个新的状态\r\n    const [debouncedValue, setDebouncedValue] = useState(value);\r\n    useEffect(() => {\r\n        // 每次在value变化之后，设置一个定时器。\r\n        const timeout = setTimeout(() => {\r\n            setDebouncedValue(value)\r\n        }, delay);\r\n        // 每次在上一个useEffect处理完以后再运行\r\n        return () => clearTimeout(timeout);\r\n    }, [value, delay])\r\n    return debouncedValue;\r\n}\r\n\r\n// 传入的initialArray的参数类型为A的数组\r\nexport const useArray = <T>(initialArray: T[]) => {\r\n    const [value, setValue] = useState(initialArray);\r\n    return {\r\n        value,\r\n        setValue,\r\n        add: (item: T) => setValue([...value, item]),\r\n        clear: () => setValue([]),\r\n        removeIndex: (index: number) => {\r\n            const copy = [...value];\r\n            copy.splice(index, 1);\r\n            setValue(copy);\r\n        }\r\n    }\r\n}\r\n\r\n// 自定义标题。 keepOnUnmount:来实现离开页面时标题自动关闭。\r\n/* 使用闭包，未加依赖的写法\r\nexport const useDocumentTitle = (title: string, keepOnUnmount: boolean = true) => {\r\n    const oldTitle = document.title;\r\n    useEffect(() => {\r\n        document.title = title;\r\n    }, [title])\r\n    useEffect(() => {\r\n        // 该return 回调函数就会在页面被卸载的时候调用\r\n        return () => {\r\n            if(!keepOnUnmount) {\r\n                document.title = oldTitle;\r\n            }\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n} */\r\n// 加依赖的写法\r\nexport const useDocumentTitle = (title: string, keepOnUnmount: boolean = true) => {\r\n    const oldTitle = useRef(document.title).current;\r\n    useEffect(() => {\r\n        document.title = title;\r\n    }, [title])\r\n    useEffect(() => {\r\n        // 该return 回调函数就会在页面被卸载的时候调用\r\n        return () => {\r\n            if (!keepOnUnmount) {\r\n                document.title = oldTitle;\r\n            }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [keepOnUnmount, oldTitle])\r\n}\r\n\r\n\r\n// 给重置路由定义一个方法(可以刷新整个页面)\r\nexport const resetRoute = () => window.location.href = window.location.origin;\r\n\r\n/**\r\n * 传入一个对象，和键集合，返回对应的对象中的键值对\r\n * @param obj\r\n * @param keys\r\n */\r\nexport const subset = <\r\n    O extends { [key in string]: unknown },\r\n    K extends keyof O\r\n>(\r\n    obj: O,\r\n    keys: K[]\r\n) => {\r\n    const filteredEntries = Object.entries(obj).filter(([key]) =>\r\n        keys.includes(key as K)\r\n    );\r\n    return Object.fromEntries(filteredEntries) as Pick<O, K>;\r\n};\r\n\r\n// 用来返回组件的加载状态，如果还没挂载或者已经卸载，返回false；否则返回true\r\n// 阻止在已卸载组件上赋值\r\nexport const useMountedRef = () => {\r\n    const mountedRef = useRef(false);\r\n\r\n    useEffect(() => {\r\n        // 页面加载完以后调用\r\n        mountedRef.current = true\r\n        return () => {\r\n            // 页面被卸载时调用\r\n            mountedRef.current = false;\r\n        }\r\n    })\r\n    return mountedRef;\r\n}","// 封装一个函数，让每次请求都能自动携带token的状态。\r\n// 实现刷新时依然保留登陆的状态\r\nimport qs from \"qs\";\r\nimport * as auth from 'auth-provider'\r\nimport { useAuth } from \"context/auth-context\";\r\nimport { useCallback } from \"react\";\r\n\r\nconst apiUrl = process.env.REACT_APP_API_URL;\r\ninterface Config extends RequestInit {\r\n    data?: object;\r\n    token?: string;\r\n}\r\n\r\n// endpoint为请求地址后面的名字，如 /projects 中的projects\r\n// 参数后面增加的 = {}，是增加一个默认值\r\nexport const http = async (endpoint: string, { data, token, headers, ...customConfig }: Config = {}) => {\r\n    // config的默认值的为前面写的(如方法的请求为get),customConfig里面的会覆盖掉前面的,所以需要用if来判断请求的方式\r\n    const config = {\r\n        method: 'GET',\r\n        headers: {\r\n            Authorization: token ? `Bearer ${token}` : '',\r\n            \"Content-Type\": data ? 'application/json' : ''\r\n        },\r\n        ...customConfig\r\n    }\r\n    // 在get请求里，所传的参数需要带到fetch的url中， post 和 delete 是直接放在body中的\r\n    if (config.method.toUpperCase() === 'GET') {\r\n        endpoint += `?${qs.stringify(data)}`\r\n    } else {\r\n        config.body = JSON.stringify(data || {})\r\n    }\r\n    return window.fetch(`${apiUrl}/${endpoint}`, config)\r\n        .then(\r\n            async response => {\r\n                // 处理特殊情况：未登录或者token失效的情况下返回401的状态\r\n                if (response.status === 401) {\r\n                    await auth.logout();\r\n                    window.location.reload();\r\n                    return Promise.reject({ message: '请重新登录' })\r\n                }\r\n                const data = await response.json();\r\n                if (response.ok) {\r\n                    return data;\r\n                } else {\r\n                    return Promise.reject(data)\r\n                }\r\n            }\r\n        )\r\n}\r\n\r\n\r\n// 可以自动携带token的方法\r\nexport const useHttp = () => {\r\n    const { user } = useAuth();\r\n    // return ([endpoint, config]:[string, Config]) => http(endpoint, {...config, token: user?.token});\r\n    // 优化：使用Parameters---TS Utility Types  \r\n    // ...的作用是把tupple里面的参数解放出来\r\n    return useCallback(\r\n        (...[endpoint, config]: Parameters<typeof http>) =>\r\n            http(endpoint, { ...config, token: user?.token }),\r\n        [user?.token]\r\n    );\r\n}","import { useCallback, useReducer, useState } from \"react\";\r\nimport { useMountedRef } from \"utils\";\r\n\r\ninterface State<D> {\r\n    error: Error | null;\r\n    data: D | null;\r\n    // idle：状态尚未发生； loading:状态正在发生； error: 状态发生有错误;  success：状态发生无错误\r\n    stat: 'idle' | 'loading' | 'error' | 'success'\r\n}\r\n\r\n// 默认的state\r\nconst defaultInitialState: State<null> = {\r\n    // 一开始状态是idle\r\n    stat: 'idle',\r\n    data: null,\r\n    error: null\r\n}\r\n\r\n// 让抛出的异常成为一个可选项\r\nconst defaultConfig = {\r\n    throwOnError: false\r\n}\r\n\r\n\r\n// (initialState?: State<D>)是用户传入的state\r\n/* export const useAsync = <D>(initialState?: State<D>, initialConfig?: typeof defaultConfig) => {\r\n    const config = { ...defaultConfig, initialConfig };\r\n    const [state, setState] = useState<State<D>>({\r\n        ...defaultInitialState,\r\n        ...initialState\r\n    });\r\n    const setData = useCallback((data: D) => setState({\r\n        data,\r\n        stat: 'success',\r\n        error: null\r\n    }), [])\r\n    const setError = useCallback((error: Error) => setState({\r\n        error,\r\n        stat: 'error',\r\n        data: null\r\n    }), [])\r\n    const mountedRef = useMountedRef();\r\n    const [retry, setRetry] = useState(() => () => { })\r\n    // run 用来触发异步请求\r\n    // 增加一个retry配置，让其能够返回一个promise，能够实现自动重新渲染的目的\r\n    const run = useCallback((promise: Promise<D>, runConfig?: { retry: () => Promise<D> }) => {\r\n        // 没有then属性表示不是promise\r\n        if (!promise || !promise.then) {\r\n            throw new Error('请传入Promise类型数据');\r\n        }\r\n        setRetry(() => () => {\r\n            if (runConfig?.retry) {\r\n                run(runConfig?.retry(), runConfig)\r\n            }\r\n        })\r\n        // 传入的是正常的promise，就将异步请求触发刚开始时要改成loading，表示loading开始了\r\n        setState(prevState => ({ ...prevState, stat: 'loading' }))\r\n        return promise\r\n            .then(data => {\r\n                // 如果mountedRef.current为true，说明此时组件被挂载且未被卸载\r\n                if (mountedRef.current) {\r\n                    setData(data);\r\n                }\r\n                return data;\r\n            })\r\n            .catch(error => {\r\n                // catch 会消化异常，如果不主动抛出，外面是接收不到异常的\r\n                setError(error);\r\n                if (config.throwOnError) {\r\n                    // return error; 不能抛出异常\r\n                    return Promise.reject(error);\r\n                }\r\n                return error;\r\n            })\r\n    }, [config.throwOnError, mountedRef, setData, setError])\r\n\r\n    return {\r\n        isIdle: state.stat === 'idle',\r\n        isLoading: state.stat === 'loading',\r\n        isError: state.stat === 'error',\r\n        isSuccess: state.stat === 'success',\r\n        run,\r\n        setData,\r\n        setError,\r\n        // 得到返回值以后刷新页面 retry被调用时，重新跑一遍run，让state刷新一遍\r\n        retry,\r\n        ...state\r\n    }\r\n}\r\n */\r\n\r\nconst useSafeDispatch = <T>(dispatch: (...args: T[]) => void) => {\r\n    const mountedRef = useMountedRef();\r\n    return useCallback((...args: T[]) => (mountedRef.current ? dispatch(...args) : void 0), [dispatch, mountedRef])\r\n}\r\n// 用useReducer改写useAsync\r\nexport const useAsync = <D>(initialState?: State<D>, initialConfig?: typeof defaultConfig) => {\r\n    const config = { ...defaultConfig, initialConfig };\r\n    const [state, dispatch] = useReducer((state: State<D>, action: Partial<State<D>>) => ({ ...state, ...action }), {\r\n        ...defaultInitialState,\r\n        ...initialState\r\n    });\r\n    const safaDispatch = useSafeDispatch(dispatch);\r\n    const setData = useCallback((data: D) => safaDispatch({\r\n        data,\r\n        stat: 'success',\r\n        error: null\r\n    }), [safaDispatch])\r\n    const setError = useCallback((error: Error) => safaDispatch({\r\n        error,\r\n        stat: 'error',\r\n        data: null\r\n    }), [safaDispatch])\r\n\r\n    const [retry, setRetry] = useState(() => () => { })\r\n    // run 用来触发异步请求\r\n    // 增加一个retry配置，让其能够返回一个promise，能够实现自动重新渲染的目的\r\n    const run = useCallback((promise: Promise<D>, runConfig?: { retry: () => Promise<D> }) => {\r\n        // 没有then属性表示不是promise\r\n        if (!promise || !promise.then) {\r\n            throw new Error('请传入Promise类型数据');\r\n        }\r\n        setRetry(() => () => {\r\n            if (runConfig?.retry) {\r\n                run(runConfig?.retry(), runConfig)\r\n            }\r\n        })\r\n        // 传入的是正常的promise，就将异步请求触发刚开始时要改成loading，表示loading开始了\r\n        safaDispatch({ stat: 'loading' });\r\n        return promise\r\n            .then(data => {\r\n                setData(data);\r\n                return data;\r\n            })\r\n            .catch(error => {\r\n                // catch 会消化异常，如果不主动抛出，外面是接收不到异常的\r\n                setError(error);\r\n                if (config.throwOnError) {\r\n                    // return error; 不能抛出异常\r\n                    return Promise.reject(error);\r\n                }\r\n                return error;\r\n            })\r\n    }, [config.throwOnError, setData, setError, safaDispatch])\r\n\r\n    return {\r\n        isIdle: state.stat === 'idle',\r\n        isLoading: state.stat === 'loading',\r\n        isError: state.stat === 'error',\r\n        isSuccess: state.stat === 'success',\r\n        run,\r\n        setData,\r\n        setError,\r\n        // 得到返回值以后刷新页面 retry被调用时，重新跑一遍run，让state刷新一遍\r\n        retry,\r\n        ...state\r\n    }\r\n}","import * as auth from 'auth-provider';\r\nimport { FullPageErrorFallBack, FullPageLoading } from 'components/lib';\r\nimport React, { ReactNode } from 'react'\r\nimport { useQueryClient } from 'react-query';\r\nimport { User } from 'types/user';\r\nimport { useMount } from 'utils';\r\nimport { http } from 'utils/http';\r\nimport { useAsync } from 'utils/use-async';\r\n\r\ninterface AuthForm {\r\n    username: string;\r\n    password: string;\r\n}\r\n\r\n// 刷新页面时初始化user，防止出现刷新页面时就退出登录状态\r\nconst bootstrapUser = async () => {\r\n    let user = null;\r\n    const token = auth.getToken();\r\n    if (token) {\r\n        const data = await http('me', { token });\r\n        user = data.user;\r\n    }\r\n    return user;\r\n}\r\n\r\nconst AuthContext = React.createContext<\r\n    | {\r\n        user: User | null;\r\n        register: (form: AuthForm) => Promise<void>;\r\n        login: (form: AuthForm) => Promise<void>;\r\n        logout: () => Promise<void>;\r\n    }\r\n    | undefined>\r\n    (undefined);\r\n// displayname 用来显示名称\r\n// 当一个函数的 displayName 属性被定义，这个函数的 displayName 属性将返回显示名称。\r\nAuthContext.displayName = 'AuthContext';\r\n\r\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\r\n\r\n    const { data: user, error, isLoading, isIdle, isError, run, setData: setUser } = useAsync<User | null>();\r\n    const queryClient = useQueryClient()\r\n    // const [user, setUser] = useState<User | null>(null);\r\n    // const login = (form: AuthForm) => auth.login(form).then(user => setUser(user));\r\n    // 可以消参————————point free\r\n    const login = (form: AuthForm) => auth.login(form).then(setUser);\r\n    const register = (form: AuthForm) => auth.register(form).then(setUser);\r\n    const logout = () => auth.logout().then(() => {\r\n        setUser(null)\r\n        queryClient.clear()\r\n    });\r\n\r\n    // 页面加载时调用\r\n    useMount(() => {\r\n        // bootstrapUser().then(setUser)\r\n        run(bootstrapUser());\r\n    })\r\n    if (isIdle || isLoading) {\r\n        return <FullPageLoading />\r\n    }\r\n\r\n    // 如果因为错误登出的话，让用户知道错误信息\r\n    if (isError) {\r\n        return <FullPageErrorFallBack error={error} />\r\n    }\r\n\r\n    // 无论在哪个组件里，都可以全局调用三个方法，用user读取相应的信息（token)\r\n    return <AuthContext.Provider children={children} value={{ user, login, register, logout }} />\r\n}\r\n\r\nexport const useAuth = () => {\r\n    const context = React.useContext(AuthContext);\r\n    if (!context) {\r\n        throw new Error('useAuth必须在AuthProvider中使用')\r\n    }\r\n    return context;\r\n}","var _defs, _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSoftwareLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 179 32\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    focusable: \"false\",\n    \"aria-hidden\": \"true\",\n    className: \"css-sq9aeg-Logo\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    x1: \"97.6553341%\",\n    y1: \"35.6591143%\",\n    x2: \"37.202032%\",\n    y2: \"75.4891864%\",\n    id: \"uid392-1\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#0052CC\",\n    offset: \"7%\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#2684FF\",\n    offset: \"100%\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    x1: \"8.43371138%\",\n    y1: \"60.1495759%\",\n    x2: \"64.1161517%\",\n    y2: \"23.5790285%\",\n    id: \"uid392-2\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#0052CC\",\n    offset: \"0%\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#2684FF\",\n    offset: \"100%\"\n  })))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    stroke: \"none\",\n    strokeWidth: 1,\n    fillRule: \"nonzero\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.3881081,27.9242105 C12.4881804,26.8071817 13.1062496,25.2917664 13.1062496,23.7115789 C13.1062496,22.1313915 12.4881804,20.6159762 11.3881081,19.4989474 L11.3881081,19.4989474 L3.74837838,11.7621053 L0.273513514,15.2926316 C-0.0900771727,15.6625064 -0.0900771727,16.2617042 0.273513514,16.6315789 L11.3881081,27.9242105 L11.3881081,27.9242105 Z\",\n    fill: \"currentColor\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M22.5027027,15.2926316 L11.3881081,4 L11.3881081,4 L11.3539189,4.03473684 L11.3539189,4.03473684 C9.08852466,6.36456187 9.09963243,10.1156459 11.3787838,12.4315789 L19.0247297,20.1652632 L22.5027027,16.6315789 C22.8662934,16.2617042 22.8662934,15.6625064 22.5027027,15.2926316 Z\",\n    fill: \"currentColor\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.3881081,12.4252632 C9.10895676,10.1093301 9.09784899,6.35824608 11.3632432,4.02842105 L3.43445946,12.0810526 L7.58067568,16.2936842 L11.3881081,12.4252632 Z\",\n    fill: \"url(#uid392-1)\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.1893243,15.6368421 L11.3881081,19.4989474 C12.4881804,20.6159762 13.1062496,22.1313915 13.1062496,23.7115789 C13.1062496,25.2917664 12.4881804,26.8071817 11.3881081,27.9242105 L19.3355405,19.8494737 L15.1893243,15.6368421 Z\",\n    fill: \"url(#uid392-2)\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M36.07,18.956 C36.07,20.646 35.394,21.842 33.418,21.842 C32.56,21.842 31.702,21.686 31,21.4 L31,23.662 C31.65,23.896 32.586,24.104 33.808,24.104 C37.032,24.104 38.41,21.946 38.41,18.8 L38.41,6.918 L36.07,6.918 L36.07,18.956 Z M41.894,7.568 C41.894,8.556 42.544,9.128 43.454,9.128 C44.364,9.128 45.014,8.556 45.014,7.568 C45.014,6.58 44.364,6.008 43.454,6.008 C42.544,6.008 41.894,6.58 41.894,7.568 Z M42.31,24 L44.546,24 L44.546,11 L42.31,11 L42.31,24 Z M47.926,24 L50.11,24 L50.11,16.33 C50.11,13.574 51.852,12.716 54.712,13.002 L54.712,10.818 C52.164,10.662 50.864,11.754 50.11,13.288 L50.11,11 L47.926,11 L47.926,24 Z M65.45,24 L65.45,21.66 C64.618,23.376 63.058,24.26 61.056,24.26 C57.598,24.26 55.856,21.322 55.856,17.5 C55.856,13.834 57.676,10.74 61.316,10.74 C63.214,10.74 64.67,11.598 65.45,13.288 L65.45,11 L67.686,11 L67.686,24 L65.45,24 Z M58.092,17.5 C58.092,20.62 59.34,22.18 61.654,22.18 C63.656,22.18 65.45,20.906 65.45,18.02 L65.45,16.98 C65.45,14.094 63.812,12.82 61.914,12.82 C59.392,12.82 58.092,14.484 58.092,17.5 Z M86.926,19.294 C86.926,16.226 84.898,15.056 81.284,14.146 C78.268,13.392 77.176,12.69 77.176,11.286 C77.176,9.726 78.502,8.946 80.738,8.946 C82.506,8.946 84.352,9.258 86.068,10.246 L86.068,7.906 C84.898,7.256 83.312,6.658 80.842,6.658 C76.864,6.658 74.836,8.634 74.836,11.286 C74.836,14.094 76.552,15.42 80.4,16.356 C83.65,17.136 84.586,17.942 84.586,19.45 C84.586,20.958 83.624,21.972 81.05,21.972 C78.788,21.972 76.344,21.374 74.758,20.542 L74.758,22.934 C76.084,23.61 77.618,24.26 80.92,24.26 C85.158,24.26 86.926,22.258 86.926,19.294 Z M95.09,24.26 C91.19,24.26 88.902,21.374 88.902,17.474 C88.902,13.574 91.19,10.74 95.09,10.74 C98.964,10.74 101.226,13.574 101.226,17.474 C101.226,21.374 98.964,24.26 95.09,24.26 Z M95.09,12.82 C92.308,12.82 91.086,15.004 91.086,17.474 C91.086,19.944 92.308,22.18 95.09,22.18 C97.846,22.18 99.042,19.944 99.042,17.474 C99.042,15.004 97.846,12.82 95.09,12.82 Z M106.92,9.622 C106.92,8.452 107.596,7.646 108.974,7.646 C109.494,7.646 109.988,7.698 110.378,7.776 L110.378,5.722 C109.988,5.618 109.546,5.514 108.87,5.514 C106.088,5.514 104.736,7.152 104.736,9.57 L104.736,11 L102.63,11 L102.63,13.08 L104.736,13.08 L104.736,24 L106.92,24 L106.92,13.08 L110.274,13.08 L110.274,11 L106.92,11 L106.92,9.622 Z M115.786,19.892 L115.786,13.08 L119.244,13.08 L119.244,11 L115.786,11 L115.786,8.244 L113.602,8.244 L113.602,11 L111.496,11 L111.496,13.08 L113.602,13.08 L113.602,19.944 C113.602,22.362 114.954,24 117.736,24 C118.412,24 118.854,23.896 119.244,23.792 L119.244,21.634 C118.854,21.712 118.36,21.816 117.84,21.816 C116.462,21.816 115.786,21.036 115.786,19.892 Z M125.432,24 L128.292,24 L130.528,17.708 L131.724,13.704 L132.92,17.708 L135.156,24 L138.016,24 L142.8,11 L140.33,11 L136.586,22.024 L132.79,11 L130.658,11 L126.862,22.024 L123.118,11 L120.648,11 L125.432,24 Z M153.538,24 L153.538,21.66 C152.706,23.376 151.146,24.26 149.144,24.26 C145.686,24.26 143.944,21.322 143.944,17.5 C143.944,13.834 145.764,10.74 149.404,10.74 C151.302,10.74 152.758,11.598 153.538,13.288 L153.538,11 L155.774,11 L155.774,24 L153.538,24 Z M146.18,17.5 C146.18,20.62 147.428,22.18 149.742,22.18 C151.744,22.18 153.538,20.906 153.538,18.02 L153.538,16.98 C153.538,14.094 151.9,12.82 150.002,12.82 C147.48,12.82 146.18,14.484 146.18,17.5 Z M159.154,24 L161.338,24 L161.338,16.33 C161.338,13.574 163.08,12.716 165.94,13.002 L165.94,10.818 C163.392,10.662 162.092,11.754 161.338,13.288 L161.338,11 L159.154,11 L159.154,24 Z M178.108,23.48 C177.042,24.052 175.404,24.26 174.078,24.26 C169.216,24.26 167.084,21.452 167.084,17.474 C167.084,13.548 169.268,10.74 173.22,10.74 C177.224,10.74 178.836,13.522 178.836,17.474 L178.836,18.488 L169.346,18.488 C169.658,20.698 171.088,22.128 174.156,22.128 C175.664,22.128 176.938,21.842 178.108,21.426 L178.108,23.48 Z M173.116,12.768 C170.75,12.768 169.554,14.302 169.32,16.564 L176.574,16.564 C176.444,14.146 175.352,12.768 173.116,12.768 Z\",\n    fill: \"inherit\",\n    fillRule: \"evenodd\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSoftwareLogo);\nexport default __webpack_public_path__ + \"static/media/software-logo.ec204298.svg\";\nexport { ForwardRef as ReactComponent };","import { Rate } from \"antd\";\r\nimport React from \"react\";\r\n\r\ninterface PinProps extends React.ComponentProps<typeof Rate> {\r\n    checked: boolean;\r\n    onCheckedChange?: (checked: boolean) => void;\r\n}\r\n\r\nexport const Pin = ({ checked, onCheckedChange, ...restProps }: PinProps) => {\r\n    return (\r\n        <Rate\r\n            count={1}\r\n            value={checked ? 1 : 0}\r\n            onChange={num => onCheckedChange?.(!!num)}\r\n            {...restProps}\r\n        />\r\n    )\r\n}","/**\n * 在本地对排序进行乐观更新\n * @param fromId 要排序的项目的id\n * @param type 'before' | 'after'\n * @param referenceId 参照id\n * @param list 要排序的列表, 比如tasks, kanbans\n */\nexport const reorder = ({\n  fromId,\n  type,\n  referenceId,\n  list,\n}: {\n  list: { id: number }[];\n  fromId: number;\n  type: \"after\" | \"before\";\n  referenceId: number;\n}) => {\n  const copiedList = [...list];\n  // 找到fromId对应项目的下标\n  const movingItemIndex = copiedList.findIndex((item) => item.id === fromId);\n  if (!referenceId) {\n    return insertAfter([...copiedList], movingItemIndex, copiedList.length - 1);\n  }\n  const targetIndex = copiedList.findIndex((item) => item.id === referenceId);\n  const insert = type === \"after\" ? insertAfter : insertBefore;\n  return insert([...copiedList], movingItemIndex, targetIndex);\n};\n\n/**\n * 在list中，把from放在to的前边\n * @param list\n * @param from\n * @param to\n */\nconst insertBefore = (list: unknown[], from: number, to: number) => {\n  const toItem = list[to];\n  const removedItem = list.splice(from, 1)[0];\n  const toIndex = list.indexOf(toItem);\n  list.splice(toIndex, 0, removedItem);\n  return list;\n};\n\n/**\n * 在list中，把from放在to的后面\n * @param list\n * @param from\n * @param to\n */\nconst insertAfter = (list: unknown[], from: number, to: number) => {\n  const toItem = list[to];\n  const removedItem = list.splice(from, 1)[0];\n  const toIndex = list.indexOf(toItem);\n  list.splice(toIndex + 1, 0, removedItem);\n  return list;\n};\n","import { QueryKey, useQueryClient } from \"react-query\";\r\nimport { Task } from \"types/task\";\r\nimport { reorder } from \"./reorder\";\r\n\r\nexport const useConfig = (queryKey: QueryKey, callback: (target: any, old?: any[]) => any[]) => {\r\n    const queryClient = useQueryClient();\r\n    return {\r\n        // 这里的第二个参数用来刷新页面。相当于retry\r\n        onSuccess: () => queryClient.invalidateQueries(queryKey),\r\n        // 本地有个缓存的状态。\r\n        async onMutate(target: any) {\r\n            const previousItems = queryClient.getQueryData(queryKey);\r\n            queryClient.setQueryData(queryKey, (old?: any[]) => {\r\n                return callback(target, old)\r\n            })\r\n            return { previousItems };\r\n        },\r\n        onError(error: any, newItem: any, context: any) {\r\n            queryClient.setQueryData(queryKey, context.previousItems)\r\n        }\r\n    }\r\n}\r\n\r\nexport const useDeleteConfig = (queryKey: QueryKey) => useConfig(queryKey, (target, old) => old?.filter(item => item.id !== target.id) || [])\r\nexport const useEditConfig = (queryKey: QueryKey) => useConfig(queryKey, (target, old) => old?.map(item => item.id === target.id ? { ...item, ...target } : item) || [])\r\nexport const useAddConfig = (queryKey: QueryKey) => useConfig(queryKey, (target, old) => old ? [...old, target] : [])\r\n\r\n\r\n// reorder请求结束的工作\r\nexport const useReorderConfig = (queryKey: QueryKey) => useConfig(queryKey, (target, old) => old || [])\r\n// 改写成下面的形式\r\nexport const useReorderKanbanConfig = (queryKey: QueryKey) =>\r\n    useConfig(queryKey, (target, old) => reorder({ list: old, ...target }));\r\nexport const useReorderTaskConfig = (queryKey: QueryKey) =>\r\n    useConfig(queryKey, (target, old) => {\r\n        // 乐观更新task序列中的位置\r\n        const orderedList = reorder({ list: old, ...target }) as Task[];\r\n        // 由于task还可能涉及到所属kanban的改变，所以不要忘记改变kanbanId\r\n        return orderedList.map((item) =>\r\n            item.id === target.fromId\r\n                ? { ...item, kanbanId: target.toKanbanId }\r\n                : item\r\n        );\r\n    });\r\n","import { useHttp } from \"./http\"\r\nimport { QueryKey, useMutation, useQuery } from \"react-query\"\r\nimport { useAddConfig, useDeleteConfig, useEditConfig } from './use-optimistic-options'\r\nimport { Project } from \"types/projects\";\r\nimport { cleanObject } from \"utils\";\r\n\r\n// 参数为要搜索的对象\r\nexport const useProjects = (param?: Partial<Project>) => {\r\n    const client = useHttp();\r\n\r\n    // react-query版本\r\n    // ['projects', param]意思是，里面的值变化的时候就会重新的触发\r\n    // return useQuery<Project[]>(['projects', param], () => client('projects', { data: param }))\r\n    // 更改以后，让空对象还是什么都变成undefined\r\n    return useQuery<Project[]>(['projects', cleanObject(param)], () => client('projects', { data: param }))\r\n\r\n    /* 老版本，新版本使用react-query\r\n    const { run, ...result } = useAsync<Project[]>()\r\n    const fetchProjects = useCallback(\r\n        () => client('projects', { data: cleanObject(param || {}) }), [param, client]\r\n    );\r\n\r\n    // 获取项目列表接口的代码\r\n    useEffect(() => {\r\n        run(fetchProjects(), { retry: fetchProjects })\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [param, run, fetchProjects])\r\n    return result; */\r\n}\r\n\r\n// 这个函数不能传参数，因为hook只能放在最外层，不能放在其他函数里面\r\nexport const useEditProject = (queryKey: QueryKey) => {\r\n    const client = useHttp();\r\n\r\n    return useMutation(\r\n        (params: Partial<Project>) => client(`projects/${params.id}`, {\r\n            method: \"PATCH\",\r\n            data: params,\r\n        }),\r\n        useEditConfig(queryKey)\r\n    )\r\n    /* \r\n    提取出去进行封装\r\n    {\r\n        // 这里的第二个参数用来刷新页面。相当于retry\r\n        onSuccess: () => queryClient.invalidateQueries(queryKey),\r\n        // 本地有个缓存的状态。\r\n        async onMutate(target) {\r\n            const previousItems = queryClient.getQueryData(queryKey);\r\n            queryClient.setQueryData(queryKey, (old?: Project[]) => {\r\n                return old?.map(project => project.id === target.id ? { ...project, ...target } : project) || []\r\n            })\r\n            return { previousItems };\r\n        },\r\n        onError(error: TError, newItem: Partial<Project>, context: TContext | undefined) {\r\n            queryClient.setQueryData(queryKey, (context as { previousItems: Project[] }).previousItems)\r\n        }\r\n    }) */\r\n    /* \r\n    老版本，新版本用react-query\r\n    const { run, ...asyncResult } = useAsync();\r\n    const mutate = (params: Partial<Project>) => {\r\n        return run(client(`projects/${params.id}`, {\r\n            data: params,\r\n            method: 'PATCH',\r\n        }))\r\n    }\r\n    return {\r\n        mutate,\r\n        ...asyncResult\r\n    } */\r\n}\r\nexport const useAddProject = (queryKey: QueryKey) => {\r\n    const client = useHttp();\r\n    return useMutation(\r\n        (params: Partial<Project>) =>\r\n            client(`projects`, {\r\n                data: params,\r\n                method: 'POST',\r\n            }),\r\n        useAddConfig(queryKey)\r\n    )\r\n    /* const { run, ...asyncResult } = useAsync();\r\n    const mutate = (params: Partial<Project>) => {\r\n        return run(client(`projects/${params.id}`, {\r\n            data: params,\r\n            method: 'POST',\r\n        }))\r\n    }\r\n    return {\r\n        mutate,\r\n        ...asyncResult\r\n    } */\r\n}\r\n\r\n\r\nexport const useDeleteProject = (queryKey: QueryKey) => {\r\n    const client = useHttp();\r\n    return useMutation(\r\n        ({ id }: { id: number }) =>\r\n            client(`projects/${id}`, {\r\n                method: 'DELETE',\r\n            }),\r\n        useDeleteConfig(queryKey)\r\n    )\r\n}\r\n\r\n// 获取project详情\r\n// 第三个参数是牌配置参数，加入id为没有定义时，不希望其能够传递进去\r\nexport const useProject = (id?: number) => {\r\n    const client = useHttp();\r\n    return useQuery<Project>(\r\n        ['project', { id }],\r\n        () => client(`projects/${id}`),\r\n        {\r\n            enabled: Boolean(id)\r\n        }\r\n    )\r\n}","import { useMemo, useState } from \"react\";\r\nimport { URLSearchParamsInit, useSearchParams } from \"react-router-dom\"\r\nimport { cleanObject, subset } from \"utils\";\r\n\r\n/* \r\n返回页面url中，指定键的参数值\r\n*/\r\n// as const 的作用时解决其返回值类型的问题。返回最原始的类型\r\n// 对K做出限制 K extends string\r\nexport const useUrlQueryParam = <K extends string>(keys: K[]) => {\r\n    // 获取url中的param\r\n    const [searchParams] = useSearchParams();\r\n    const setSearchParams = useSetUrlSearchParam();\r\n    const [stateKeys] = useState(keys);\r\n    return [\r\n        // 只有searchParams才会进行useMemo的运算\r\n        // useMemo(\r\n        //     () => keys.reduce((prev, key) => {\r\n        //         return { ...prev, [key]: searchParams.get(key) || '' }\r\n        //     }, {} as { [key in K]: string }),\r\n        //     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        //     [searchParams]\r\n        // ),\r\n        useMemo(\r\n            () =>\r\n                subset(Object.fromEntries(searchParams), stateKeys) as {\r\n                    [key in K]: string;\r\n                },\r\n            [searchParams, stateKeys]\r\n\r\n        ),\r\n        // {} as { [key in string]: string }) 解决初始值的类型问题;\r\n        // 改成泛型以后，可以让其返回值为{string，string}类型\r\n        (params: Partial<{ [key in K]: unknown }>) => {\r\n            return setSearchParams(params)\r\n            // const o = cleanObject({ ...Object.fromEntries(searchParams), ...params }) as URLSearchParamsInit;\r\n            // return setSearchParam(o);\r\n        }\r\n    ] as const\r\n}\r\n\r\n// 改成只有一入口的形式，无论做什么只需要在这里改变一次就可以了\r\nexport const useSetUrlSearchParam = () => {\r\n    const [searchParams, setSearchParam] = useSearchParams();\r\n\r\n    return (params: { [key in string]: unknown }) => {\r\n        const o = cleanObject({ ...Object.fromEntries(searchParams), ...params }) as URLSearchParamsInit;\r\n        return setSearchParam(o);\r\n    }\r\n}","import { useMemo } from \"react\";\r\nimport { useProject } from \"utils/project\";\r\nimport { useSetUrlSearchParam, useUrlQueryParam } from \"utils/url\";\r\n\r\n// 项目列表搜索的参数\r\nexport const useProjectsSearchParamas = () => {\r\n    const [param, setParam] = useUrlQueryParam(['name', 'personId'])\r\n    // 对param做一个转换\r\n    return [\r\n        useMemo(() => ({ ...param, personId: Number(param.personId) || undefined }), [param]),\r\n        setParam\r\n    ] as const\r\n}\r\n\r\nexport const useProjectQuerykey = () => {\r\n    const [params] = useProjectsSearchParamas();\r\n    return ['projects', params];\r\n}\r\n\r\n// 扮演一个全局状态管理器的功能\r\nexport const useProjectModal = () => {\r\n    // 用来判断是不是创建\r\n    const [{ projectCreate }, setProjectModalOpen] = useUrlQueryParam([\r\n        'projectCreate',\r\n    ]);\r\n    // 用来判断是不是编辑\r\n    const [{ editingProjectId }, setEditingProjectId] = useUrlQueryParam([\r\n        'editingProjectId'\r\n    ]);\r\n    const { data: editingProject, isLoading } = useProject(Number(editingProjectId));\r\n    const setUrlParams = useSetUrlSearchParam ();\r\n\r\n    const open = () => setProjectModalOpen({ projectCreate: true });\r\n   /*  const close = () => {\r\n        setProjectModalOpen({ projectCreate: undefined });\r\n        setEditingProjectId({ editingProjectId: undefined })\r\n    } */\r\n    const close = () => setUrlParams({projectCreate:'', editingProjectId:''})\r\n    const startEdit = (id: number) => setEditingProjectId({ editingProjectId: id })\r\n\r\n    return {\r\n        projectModalOpen: projectCreate === 'true' || Boolean(editingProjectId),\r\n        open,\r\n        close,\r\n        startEdit,\r\n        editingProject,\r\n        isLoading\r\n    }\r\n    /* 一般三个以上用{}返回\r\n    return [\r\n        // 标识Modal是不是打开的Boolean的值\r\n        projectCreate === 'true',\r\n        open,\r\n        close\r\n    ] as const */\r\n}","import React from 'react'\r\nimport { Dropdown, Menu, Modal, Table, TableProps } from 'antd'\r\nimport dayjs from 'dayjs'\r\n// 二者的关系为：类似于react和react-dom/react-native/react-vr\r\nimport { Link } from 'react-router-dom'\r\nimport { Pin } from 'components/pin'\r\nimport { useDeleteProject, useEditProject } from 'utils/project'\r\nimport { ButtonNoPadding } from 'components/lib'\r\nimport { useProjectModal, useProjectQuerykey } from './util'\r\nimport { Project } from 'types/projects'\r\nimport { User } from 'types/user'\r\n\r\n\r\n\r\n// 直积让ListProps继承TableProps，可以避免想给Table添加属性时重复操作（不用一个个手动添加）。\r\ninterface ListProps extends TableProps<Project> {\r\n    users: User[];\r\n    // list: Project[];    可以删掉，因为list已经包含在TableProps里面\r\n    // refresh?: () => void;\r\n    // projectButton: JSX.Element\r\n}\r\n\r\nexport const List = ({ users, ...props }: ListProps) => {\r\n    const { mutate } = useEditProject(useProjectQuerykey());\r\n    // const { open } = useProjectModal();\r\n    // 利用柯理化改造\r\n    const pinProject = (id: number) => (pin: boolean) => mutate({ id, pin });\r\n\r\n\r\n\r\n    return (\r\n        <Table\r\n            rowKey={'id'}\r\n            pagination={false}\r\n            columns={[\r\n                // {\r\n                //     title: '名称',\r\n                //     dataIndex: 'name',\r\n                //     // localeCompare可以对中文字符进行排序\r\n                //     sorter: (a, b) => a.name.localeCompare(b.name)\r\n                // },\r\n                // 名称改成超链接,实现跳转的功能\r\n                {\r\n                    title: <Pin checked={true} disabled={true} />,\r\n                    render(value, project) {\r\n                        return <Pin\r\n                            checked={project.pin}\r\n                            onCheckedChange={pinProject(project.id)}\r\n                        />\r\n                    }\r\n                },\r\n                {\r\n                    title: '名称',\r\n                    sorter: (a, b) => a.name.localeCompare(b.name),\r\n                    render(value, project) {\r\n                        return <Link to={String(project.id)}>{project.name}</Link>\r\n                    }\r\n                },\r\n                {\r\n                    title: '部门',\r\n                    dataIndex: 'organization',\r\n                },\r\n                {\r\n                    title: '负责人',\r\n                    render(value, project) {\r\n                        return <span>\r\n                            {users.find((user) => user.id === project.personId)?.name || '未知'}\r\n                        </span>\r\n                    }\r\n                },\r\n                {\r\n                    title: '创建时间',\r\n                    render(value, project) {\r\n                        return <span>\r\n                            {project.created ? dayjs(project.created).format('YYYY-MM-DD') : '无'}\r\n                        </span>\r\n                    }\r\n                },\r\n                {\r\n                    render(value, project) {\r\n                        return <More project={project} />\r\n                    }\r\n                }\r\n            ]}\r\n            // dataSource={list} 改用extends TableProps后删掉，改成下面的形式\r\n            {...props}\r\n        />\r\n\r\n    )\r\n}\r\n\r\nconst More = ({ project }: { project: Project }) => {\r\n    const { startEdit } = useProjectModal();\r\n    const editProject = (id: number) => () => startEdit(id);\r\n    const { mutate: deleteProject } = useDeleteProject(useProjectQuerykey());\r\n    const confirmDeleteProject = (id: number) => {\r\n        Modal.confirm({\r\n            title: '确认删除这个项目吗？',\r\n            content: '点击确定删除',\r\n            okText: '确定',\r\n            onOk() {\r\n                deleteProject({ id })\r\n            }\r\n\r\n        })\r\n    }\r\n    return (\r\n        <Dropdown\r\n            overlay={<Menu>\r\n                <Menu.Item onClick={editProject(project.id)} key={'edit'}>编辑</Menu.Item>\r\n                <Menu.Item onClick={() => confirmDeleteProject(project.id)} key={'delete'}>删除</Menu.Item>\r\n            </Menu>}>\r\n            <ButtonNoPadding type={'link'}>...</ButtonNoPadding>\r\n        </Dropdown>\r\n    )\r\n}","import { useQuery } from \"react-query\";\r\nimport { User } from \"types/user\";\r\nimport { useHttp } from \"./http\";\r\n\r\n/* export const useUsers = (param?: Partial<User>) => {\r\n    const { run, ...result } = useAsync<User[]>()\r\n    const client = useHttp();\r\n\r\n    // 获取项目列表接口的代码\r\n    useEffect(() => {\r\n        run(client('users', { data: cleanObject(param || {}) }))\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [param])\r\n    return result;\r\n}\r\n */\r\nexport const useUsers = (param?: Partial<User>) => {\r\n    const client = useHttp();\r\n    return useQuery<User[]>(['users', param], () => client('users', { data: param }))\r\n\r\n}","import { Select } from \"antd\";\r\nimport React from \"react\";\r\nimport { Raw } from \"types\";\r\n\r\n// 把Select身上的属性全部扒下来\r\ntype SelectProps = React.ComponentProps<typeof Select>\r\n\r\n// 继承时有相同键的时候会有冲突。因此需要增加Omit   \r\ninterface IdSelectProps extends Omit<SelectProps, 'value' | 'onChange' | 'options'> {\r\n    value?: Raw | undefined | null,\r\n    // 值往外传时都改成number类型\r\n    onChange?: (value?: number) => void,\r\n    defaultOptionName?: string,\r\n    options?: { name: string, id: number }[]\r\n}\r\n\r\n/* \r\nvalue:可以传入多种类型的值\r\nonChange：只会回调number|undefined类型\r\n当isNaN(Number(value))为true的时候，代表选择默认类型\r\n当选择默认类型的时候，onChange会回调undefined\r\n*/\r\nexport const IdSelect = (props: IdSelectProps) => {\r\n    const { value, onChange, defaultOptionName, options, ...restProps } = props;\r\n    return (\r\n        <Select\r\n            // 未返回数据时默认为0\r\n            value={options?.length ? toNumber(value) : 0}\r\n            onChange={value => onChange?.(toNumber(value) || undefined)}\r\n            {...restProps}\r\n        >\r\n            {\r\n                // 默认选项\r\n                defaultOptionName ? <Select.Option value={0}>{defaultOptionName}</Select.Option> : null\r\n            }\r\n            {\r\n                options?.map(option => <Select.Option key={option.id} value={option.id}>{option.name}</Select.Option>)\r\n            }\r\n        </Select>\r\n    )\r\n\r\n}\r\nconst toNumber = (value: unknown) => isNaN(Number(value)) ? 0 : Number(value);","import React from 'react'\r\nimport { useUsers } from 'utils/user'\r\nimport { IdSelect } from './id-select';\r\n\r\nexport const UserSelect = (props: React.ComponentProps<typeof IdSelect>) => {\r\n    const {data: users} = useUsers();\r\n    return (\r\n        <IdSelect options={users || []} {...props}/>\r\n    )\r\n}","import React from \"react\";\r\nimport { Input, Form } from 'antd';\r\nimport { UserSelect } from \"components/user-select\";\r\nimport { Project } from \"types/projects\";\r\nimport { User } from \"types/user\";\r\n// 指定本文件的编译器 没起作用，甚至会导致出错 /两个星星 艾特jsx jsx */\r\n// import { jsx } from \"@emotion/react\";\r\n\r\n\r\ninterface SearchPanelProps {\r\n    users: User[],\r\n    param: Partial<Pick<Project, 'name' | 'personId'>>\r\n    setParam: (param: SearchPanelProps['param']) => void;\r\n}\r\n\r\n// 函数的参数通过解构赋值获取父组件传递过来的内容\r\nexport const SearchPanel = ({ users, param, setParam }: SearchPanelProps) => {\r\n    /* \r\n    users也需要变量提升，这是因为后端返回的有些数据不是我们想要的，需要进行一定的处理\r\n    // 用来更新下拉列表\r\n    const [users, setUsers] = useState([])\r\n\r\n    为了实现状态提升，把 list 相关的代码提升到父组件中去\r\n\r\n    // 用来获取用户在input输入内容时的状态变化\r\n    const [param, setParam] = useState({\r\n        name: '',\r\n        personId: ''\r\n    });\r\n    // 用来保存项目列表数据的状态\r\n    const [list, setList] = useState([])\r\n    // 获取项目列表接口的代码,最后[]为依赖（即什么时候获取，当param改变的时候获取）\\\r\n    // fetch返回的结果是一个promise\r\n    // 当用户输入关键词或者选择select框时，param变化去同步请求列表\r\n    useEffect(() => {\r\n        fetch('').then(async response => {\r\n            // 如果response的ok属性为true的话，说明请求成功了\r\n            if(response.ok) {\r\n                setList(await response.json())\r\n            }\r\n        })\r\n    }, [param])    \r\n    */\r\n    return (\r\n        // <Form css={{ marginBottom: \"2rem\" }} layout={\"inline\"}> 不知道为什么这个不起作用\r\n        <Form style={{ marginBottom: \"2rem\" }} layout={\"inline\"}>\r\n            <Form.Item>\r\n                <Input\r\n                    placeholder={'项目名'}\r\n                    type=\"text\"\r\n                    value={param.name}\r\n                    onChange={evt => setParam({\r\n                        ...param,\r\n                        name: evt.target.value\r\n                    })}\r\n                />\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <UserSelect\r\n                    defaultOptionName={'负责人'}\r\n                    value={param.personId}\r\n                    onChange={value =>\r\n                        setParam({\r\n                            ...param,\r\n                            personId: value\r\n                        })}\r\n                />\r\n                {/* \r\n                将select提取出来，上面的组件    \r\n                <Select\r\n                    value={param.personId}\r\n                    onChange={value =>\r\n                        setParam({\r\n                            ...param,\r\n                            personId: value\r\n                        })}>\r\n                    option的 value 属性规定在表单被提交时被发送到服务器的值\r\n                    <Select.Option value=''>负责人</Select.Option>\r\n                    {\r\n                        users.map(user => <option key={user.id} value={String(user.id)}>{user.name}</option>)\r\n                    }\r\n                </Select> */}\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}","import React from 'react'\r\nimport { useDebounce, useDocumentTitle } from 'utils'\r\nimport { List } from \"./list\"\r\nimport { SearchPanel } from \"./search-panel\"\r\nimport { useProjects } from 'utils/project'\r\nimport { useUsers } from 'utils/user'\r\nimport { useProjectModal, useProjectsSearchParamas } from './util'\r\nimport { ButtonNoPadding, ErrorBox, Row, ScreenContainer } from 'components/lib'\r\n\r\n// const apiUrl = process.env.REACT_APP_API_URL;\r\nexport const ProjectListScreen = () => {\r\n    useDocumentTitle('项目列表', false);\r\n\r\n    // 状态提升\r\n    // 提取出来\r\n    // const [param, setParam] = useUrlQueryParam(['name', 'personId'])\r\n    // // 对param做一个转换\r\n    // const projectsParam = { ...param, personId: Number(param.personId) || undefined };\r\n\r\n    /* \r\n    const [users, setUsers] = useState([]);\r\n    const client = useHttp(); \r\n    */\r\n\r\n    /* \r\n    // ******不再使用原生设置的loading与error，使用新的自定义的异步操作use-async\r\n    // 显示loading的状态\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    // 异常处理\r\n    const [error, setError] = useState<null | Error>(null); \r\n    const [list, setList] = useState([]);\r\n    */\r\n    /* 使用进一步封装的useProjects, 没有run，useProjects会自动run\r\n    const { run, isLoading, error, data: list } = useAsync<Project[]>()\r\n    */\r\n\r\n\r\n    /* \r\n    // 获取项目列表接口的代码\r\n    useEffect(() => {\r\n        \r\n        //  ******不再使用原生设置的loading与error\r\n        // // 请求开始时isLoading设置true\r\n        // setIsLoading(true)\r\n        \r\n\r\n        run(client('projects', { data: cleanObject(debouncedParam) }))\r\n\r\n        \r\n        //  ******不再使用原生设置的loading与error\r\n        // // catch用来捕捉错误,并且重置数组；finally：请求结束时把isLoading设置为false\r\n        // client('projects', { data: cleanObject(debouncedParam) }).then(setList)\r\n        //     .catch(error => {\r\n        //         setList([]);\r\n        //         setError(error);\r\n        //     })\r\n        //     .finally(() => setIsLoading(false))\r\n       \r\n\r\n        // 不再使用下面的方法，使用上面的封装好的一个fetch函数来调用\r\n        // // 使用qs来简化代码\r\n        // // fetch(`${apiUrl}/projects?name=${param.name}&personId=${param.personId}`).then(async response => {\r\n        // fetch(`${apiUrl}/projects?${qs.stringify(cleanObject(debouncedParam))}`).then(\r\n        //     async (response: Response) => {\r\n        //         if (response.ok) {\r\n        //             setList(await response.json());\r\n        //         }\r\n        //     })\r\n        // // }, [param])  换成debouncedParam \r\n       \r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [debouncedParam])\r\n     */\r\n\r\n    /* 初始化users，为空数组的原因是只需要在页面渲染的时候触发一次\r\n    useEffect(() => {\r\n        fetch(`${apiUrl}/users`).then(async response => {\r\n            if (response.ok) {\r\n                setUsers(await response.json())\r\n            }\r\n        })\r\n    }, []) \r\n    改为自定义写的形式，简化代码，复用组件\r\n    */\r\n\r\n\r\n    /* \r\n    // 使用封装好的useUsers来进行操作\r\n    useMount(() => {\r\n        client('users').then(setUsers)\r\n        // fetch(`${apiUrl}/users`).then(async (response: Response) => {\r\n        //     if (response.ok) {\r\n        //         setUsers(await response.json())\r\n        //     }\r\n        // })\r\n    })\r\n    */\r\n    const { open } = useProjectModal();\r\n    const [param, setParam] = useProjectsSearchParamas()\r\n    const { isLoading, error, data: list } = useProjects(useDebounce(param, 200));\r\n    const { data: users } = useUsers()\r\n\r\n    return (\r\n        <ScreenContainer>\r\n            <Row between={true}>\r\n                <h1>项目列表</h1>                \r\n                <ButtonNoPadding\r\n                    onClick={open}\r\n                    type={'link'}\r\n                >\r\n                    创建项目\r\n                </ButtonNoPadding>\r\n            </Row>\r\n\r\n            {/* 通过 props 将状态提升的信息传递给子组件 */}\r\n            <SearchPanel users={users || []} param={param} setParam={setParam} />\r\n\r\n            {/* 如果有error就显示错误 */}\r\n            <ErrorBox error={error} />\r\n            {/* {error ? <Typography.Text type={'danger'}>{error.message}</Typography.Text> : null} */}\r\n\r\n            {/* <List users={users} list={list} />\r\n                List 里面是Table组件，Table有dataSource属性，所以用dataSource代替。\r\n            */}\r\n            <List\r\n                loading={isLoading}\r\n                users={users || []}\r\n                dataSource={list || []}\r\n            />\r\n        </ScreenContainer>\r\n    )\r\n}\r\n\r\n// 寻找无限循环的原因\r\nProjectListScreen.whyDidYouRender = false;\r\n","import React, { ReactNode } from \"react\";\r\nimport { Draggable, DraggableProps, Droppable, DroppableProps, DroppableProvided, DroppableProvidedProps } from \"react-beautiful-dnd\";\r\n\r\n// 编辑children类型\r\ntype DropProps = Omit<DroppableProps, 'children'> & { children: ReactNode }\r\n\r\nexport const Drop = ({ children, ...props }: DropProps) => {\r\n\r\n    // 简化api。 把函数以及props都封装起来\r\n    return (\r\n        <Droppable {...props}>\r\n            {\r\n                (provided => {\r\n                    if (React.isValidElement(children)) {\r\n                        // children为drop的子元素， 第二个参数为给clone的children加上props\r\n                        return React.cloneElement(children, {\r\n                            ...provided.droppableProps,\r\n                            ref: provided.innerRef,\r\n                            provided\r\n                        })\r\n                    }\r\n                    return <div />\r\n                })\r\n            }\r\n        </Droppable>\r\n    )\r\n}\r\n\r\n\r\ntype DropChildProps = Partial<{ provided: DroppableProvided } & DroppableProvidedProps> & React.HtmlHTMLAttributes<HTMLDivElement>\r\n// forwardRef：在使用DropChild时可以直接加上ref 让用户使用时可以传入ref的功能\r\n// forwradRef的两个泛型：第一个为返回的html标签的泛型\r\nexport const DropChild = React.forwardRef<HTMLDivElement, DropChildProps>(\r\n    ({ children, ...props }, ref) => <div ref={ref} {...props}>\r\n        {children}\r\n        {props.provided?.placeholder}\r\n    </div>\r\n)\r\n\r\n\r\ntype DragProps = Omit<DraggableProps, 'children'> & { children: ReactNode }\r\nexport const Drag = ({ children, ...props }: DragProps) => {\r\n    return (\r\n        <Draggable {...props} >\r\n            {\r\n                provided => {\r\n                    if (React.isValidElement(children)) {\r\n                        return React.cloneElement(children, {\r\n                            ...provided.draggableProps,\r\n                            ...provided.dragHandleProps,\r\n                            ref: provided.innerRef,\r\n                        })\r\n                    }\r\n                    return <div />\r\n                }\r\n            }\r\n        </Draggable>\r\n    )\r\n}","import { useHttp } from \"./http\"\r\nimport { QueryKey, useMutation, useQuery } from \"react-query\"\r\nimport { Kanban } from \"types/kanban\";\r\nimport { useAddConfig, useDeleteConfig, useReorderKanbanConfig } from \"./use-optimistic-options\";\r\n\r\n// 获取看板的hook\r\nexport const useKanbans = (param?: Partial<Kanban>) => {\r\n    const client = useHttp();\r\n    return useQuery<Kanban[]>(['kanbans', param], () => client('kanbans', { data: param }))\r\n}\r\n\r\nexport const useAddKanban = (queryKey: QueryKey) => {\r\n    const client = useHttp();\r\n    return useMutation(\r\n        (params: Partial<Kanban>) =>\r\n            client(`kanbans`, {\r\n                data: params,\r\n                method: 'POST',\r\n            }),\r\n        useAddConfig(queryKey)\r\n    )\r\n}\r\n\r\nexport const useDeleteKanban = (queryKey: QueryKey) => {\r\n    const client = useHttp();\r\n    return useMutation(\r\n        ({ id }: { id: number }) =>\r\n            client(`kanbans/${id}`, {\r\n                method: 'DELETE',\r\n            }),\r\n        useDeleteConfig(queryKey)\r\n    )\r\n}\r\n\r\nexport interface SortProps {\r\n    // 要重新排序的item\r\n    fromId: number,\r\n    // 目标 item\r\n    referenceId: number,\r\n    // 放在目标 item 的签名还是后面\r\n    type: 'before' | 'after',\r\n    fromKanbanId?: number,\r\n    toKanbanId?: number\r\n}\r\nexport const useReorderKanban = (queryKey: QueryKey) => {\r\n    const client = useHttp();\r\n    return useMutation(\r\n        (params: SortProps) => {\r\n            return client('kanbans/reorder', {\r\n                data: params,\r\n                method: 'POST',\r\n            });\r\n        },\r\n        useReorderKanbanConfig(queryKey)\r\n    )\r\n}","import { useHttp } from \"./http\"\r\nimport { QueryKey, useMutation, useQuery } from \"react-query\"\r\nimport { Task } from \"types/task\";\r\nimport { useAddConfig, useDeleteConfig, useEditConfig,  useReorderTaskConfig } from \"./use-optimistic-options\";\r\nimport { SortProps } from \"./kanban\";\r\n\r\n// 获取看板的hook\r\nexport const useTasks = (param?: Partial<Task>) => {\r\n    const client = useHttp();\r\n    return useQuery<Task[]>(['tasks', param], () => client('tasks', { data: param }))\r\n}\r\n\r\nexport const useAddTask = (queryKey: QueryKey) => {\r\n    const client = useHttp();\r\n    return useMutation(\r\n        (params: Partial<Task>) =>\r\n            client(`tasks`, {\r\n                data: params,\r\n                method: 'POST',\r\n            }),\r\n        useAddConfig(queryKey)\r\n    )\r\n}\r\n\r\nexport const useTask = (id?: number) => {\r\n    const client = useHttp();\r\n    return useQuery<Task>(\r\n        ['Task', { id }],\r\n        () => client(`tasks/${id}`),\r\n        {\r\n            enabled: Boolean(id)\r\n        }\r\n    )\r\n}\r\n\r\nexport const useEditTask = (queryKey: QueryKey) => {\r\n    const client = useHttp();\r\n\r\n    return useMutation(\r\n        (params: Partial<Task>) => client(`tasks/${params.id}`, {\r\n            method: \"PATCH\",\r\n            data: params,\r\n        }),\r\n        useEditConfig(queryKey)\r\n    )\r\n}\r\nexport const useDeleteTask = (queryKey: QueryKey) => {\r\n    const client = useHttp();\r\n    return useMutation(\r\n        ({ id }: { id: number }) =>\r\n            client(`tasks/${id}`, {\r\n                method: 'DELETE',\r\n            }),\r\n\r\n        useDeleteConfig(queryKey)\r\n    )\r\n}\r\n\r\nexport const useReorderTask = (queryKey: QueryKey) => {\r\n    const client = useHttp();\r\n    return useMutation(\r\n        (params: SortProps) => {\r\n            return client('tasks/reorder', {\r\n                data: params,\r\n                method: 'POST',\r\n            });\r\n        },\r\n        useReorderTaskConfig(queryKey)\r\n    )\r\n}","import { useHttp } from \"./http\"\r\nimport { useQuery } from \"react-query\"\r\nimport { TaskType } from \"types/task-type\";\r\n\r\n// 获取看板的hook\r\nexport const useTaskTypes = () => {\r\n    const client = useHttp();\r\n    return useQuery<TaskType[]>(['tasksTypes'], () => client('tasksTypes'))\r\n}\r\n","import { useCallback, useMemo } from \"react\";\r\nimport { useLocation } from \"react-router\"\r\nimport { useDebounce } from \"utils\";\r\nimport { useProject } from \"utils/project\";\r\nimport { useTask } from \"utils/task\";\r\nimport { useUrlQueryParam } from \"utils/url\";\r\n\r\nexport const useProjectIdInUrl = () => {\r\n    const { pathname } = useLocation();\r\n    const id = pathname.match(/projects\\/(\\d+)/)?.[1];\r\n    return Number(id);\r\n}\r\n// 返回整个project\r\nexport const useProjectInurl = () => useProject(useProjectIdInUrl());\r\n\r\nexport const useKanbanSearchParams = () => ({ projectId: useProjectIdInUrl() });\r\n\r\n// 只显示与之相对应的数据\r\nexport const useKanbansQuerkey = () => ['kanbans', useKanbanSearchParams()];\r\n\r\nexport const useTasksSearchParams = () => {\r\n    const [param] = useUrlQueryParam([\r\n        'name',\r\n        'typeId', // 用来搜索是bug还是task\r\n        'processorId', // 搜索负责人\r\n        'tagId',\r\n    ])\r\n    const projectId = useProjectIdInUrl();\r\n    const debounceName = useDebounce(param.name, 200);\r\n    return useMemo(() => ({\r\n        projectId,\r\n        typeId: Number(param.typeId) || undefined,\r\n        processorId: Number(param.processorId) || undefined,\r\n        tagId: Number(param.tagId) || undefined,\r\n        // name: param.name    改成防抖\r\n        name: debounceName\r\n    }), [projectId, param, debounceName]);\r\n}\r\n\r\n// 只显示与之相对应的数据\r\nexport const useTasksQuerkey = () => ['tasks', useTasksSearchParams()];\r\n\r\nexport const useTaskModal = () => {\r\n    const [{ editingTaskId }, setEditingTaskId] = useUrlQueryParam(['editingTaskId']);\r\n    const { data: editingTask, isLoading } = useTask(Number(editingTaskId));\r\n    const startEdit = useCallback((id: number) => {\r\n        setEditingTaskId({ editingTaskId: id })\r\n    }, [setEditingTaskId])\r\n    const close = useCallback(\r\n        () => {\r\n            setEditingTaskId({ editingTaskId: '' })\r\n        },\r\n        [setEditingTaskId]\r\n    )\r\n\r\n    return {\r\n        editingTaskId,\r\n        editingTask,\r\n        startEdit,\r\n        close,\r\n        isLoading\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/task.41fb42a8.svg\";","export default __webpack_public_path__ + \"static/media/bug.5d8e8fd5.svg\";","import { Card, Input } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useAddTask } from \"utils/task\";\r\nimport { useProjectIdInUrl, useTasksQuerkey } from \"./util\";\r\n\r\nexport const CreateTask = ({ kanbanId }: { kanbanId: number }) => {\r\n    const [name, setName] = useState('');\r\n    const { mutateAsync: addTask } = useAddTask(useTasksQuerkey());\r\n    const projectId = useProjectIdInUrl();\r\n    const [inputMode, setInputMode] = useState(false);\r\n\r\n    const submit = async () => {\r\n        await addTask({ projectId, name, kanbanId });\r\n        // 输入的状态\r\n        setInputMode(false);\r\n        setName('');\r\n    }\r\n    const toggle = () => setInputMode(mode => !mode);\r\n    useEffect(() => {\r\n        if (!inputMode) {\r\n            setName('');\r\n        }\r\n    }, [inputMode])\r\n\r\n    if (!inputMode) {\r\n        return (\r\n            <div onClick={toggle}>\r\n                +创建事物\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <Card>\r\n            <Input\r\n                onBlur={toggle}\r\n                placeholder={'需要做些什么'}\r\n                autoFocus={true}\r\n                onPressEnter={submit}\r\n                value={name}\r\n                onChange={evt => setName(evt.target.value)}\r\n            />\r\n        </Card>\r\n    )\r\n}","import React from \"react\";\r\n\r\n// 高亮keyword\r\n// name:现在的名字, keyword：搜索的关键字\r\nexport const Mark = ({ name, keyword }: { name: string, keyword: string }) => {\r\n    if (!keyword) {\r\n        return <>{name}</>\r\n    }\r\n    const arr = name.split(keyword)\r\n    return (\r\n        <>\r\n            {\r\n                arr.map((str: string, index: number) => <span key={index}>\r\n                    {str}\r\n                    {index === arr.length - 1 ? null : <span style={{ color: '#257AFD' }}>{keyword}</span>}\r\n\r\n                </span>)\r\n            }\r\n        </>\r\n    )\r\n}","import React from \"react\"\r\nimport { Kanban } from \"types/kanban\"\r\nimport { useTasks } from \"utils/task\"\r\nimport { useTaskTypes } from \"utils/task-type\";\r\nimport { useKanbansQuerkey, useTaskModal, useTasksSearchParams } from \"./util\";\r\nimport taskIcon from 'assets/task.svg';\r\nimport bugIcon from 'assets/bug.svg';\r\nimport styled from \"@emotion/styled\";\r\nimport { Button, Card, Dropdown, Menu, Modal } from \"antd\";\r\nimport { CreateTask } from \"./create-task\";\r\nimport { Task } from \"types/task\";\r\nimport { Mark } from \"components/mark\";\r\nimport { useDeleteKanban } from \"utils/kanban\";\r\nimport { Row } from \"components/lib\";\r\nimport { Drag, Drop, DropChild } from \"components/drag-and-drop\";\r\n\r\nconst TaskTypeIcon = ({ id }: { id: number }) => {\r\n    const { data: taskTypes } = useTaskTypes();\r\n    const name = taskTypes?.find(taskType => taskType.id === id)?.name;\r\n    if (!name) {\r\n        return null;\r\n    }\r\n    return <img src={name === 'task' ? taskIcon : bugIcon} alt={'task-icon'} />\r\n}\r\nconst TaskCard = ({ task }: { task: Task }) => {\r\n    const { startEdit } = useTaskModal();\r\n    const { name: keyword } = useTasksSearchParams();\r\n    return (\r\n        <Card onClick={() => startEdit(task.id)} style={{ marginBottom: '0.5rem', cursor: 'pointer' }} key={task.id}>\r\n            <p>\r\n                <Mark keyword={keyword} name={task.name} />\r\n            </p>\r\n            <TaskTypeIcon id={task.typeId} />\r\n        </Card>\r\n    )\r\n}\r\nconst More = ({ kanban }: { kanban: Kanban }) => {\r\n    const { mutateAsync } = useDeleteKanban(useKanbansQuerkey());\r\n    const startEdit = () => {\r\n        Modal.confirm({\r\n            okText: '确定',\r\n            cancelText: '取消',\r\n            title: '确定删除看板吗',\r\n            onOk() {\r\n                return mutateAsync({ id: kanban.id })\r\n            }\r\n        })\r\n    }\r\n    const overlay = <Menu>\r\n        <Menu.Item>\r\n            <Button type={'link'} onClick={startEdit}>删除</Button>\r\n        </Menu.Item>\r\n    </Menu>\r\n    return (\r\n        <Dropdown overlay={overlay}>\r\n            <Button type={'link'}>...</Button>\r\n        </Dropdown>\r\n    )\r\n}\r\n\r\nexport const KanbanColumn = React.forwardRef<HTMLDivElement, { kanban: Kanban }>(({ kanban, ...props }, ref) => {\r\n    // 只显示与之相对应的数据\r\n    const { data: allTasks } = useTasks(useTasksSearchParams());\r\n    // const { data: allTasks } = useTasks();\r\n    const tasks = allTasks?.filter(task => task.kanbanId === kanban.id);\r\n    return (\r\n        <Container {...props} ref={ref}>\r\n            <Row between={true}>\r\n                <h3>{kanban.name}</h3>\r\n                <More kanban={kanban} key={kanban.id} />\r\n            </Row>\r\n            <TaskContainer>\r\n                <Drop type={'ROW'} direction={'vertical'} droppableId={String(kanban.id)}>\r\n                    <DropChild style={{minHeight:'1rem'}}>\r\n                        {tasks?.map((task, taskIndex) =>\r\n                        (<Drag key={task.id} index={taskIndex} draggableId={'task' + task.id}>\r\n                            <div >\r\n                                <TaskCard task={task} key={task.id} />\r\n                            </div>\r\n                        </Drag>\r\n                        ))}\r\n                    </DropChild>\r\n                </Drop>\r\n                <CreateTask kanbanId={kanban.id} />\r\n            </TaskContainer>\r\n        </Container>\r\n    )\r\n})\r\n\r\nexport const Container = styled.div`\r\nmin-width:27rem;\r\nborder-radius: 6px;\r\nbackground-color: rgb(244,245,247);\r\ndisplay: flex;\r\nflex-direction: column;\r\npadding: 0.7rem 0.7rem 1rem;\r\nmargin-right: 1.5rem;\r\n`\r\n\r\nconst TaskContainer = styled.div`\r\noverflow: scroll;\r\nflex:1;\r\n::-webkit-scrollbar{\r\n    display: none;\r\n}\r\n`","import { Input } from \"antd\";\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useAddKanban } from \"utils/kanban\";\r\nimport { Container } from \"./kanban-column\";\r\nimport { useKanbansQuerkey, useProjectIdInUrl } from \"./util\";\r\n\r\nexport const CreateKanban = () => {\r\n    const [name, setName] = useState('');\r\n    const projectId = useProjectIdInUrl();\r\n    const { mutateAsync: addKanban } = useAddKanban(useKanbansQuerkey());\r\n    const submit = async () => {\r\n        await addKanban({ name, projectId })\r\n        setName('')\r\n    }\r\n    return (\r\n        <Container>\r\n            <Input\r\n                size={'large'}\r\n                placeholder={'新建看板名称'}\r\n                onPressEnter={submit}\r\n                value={name}\r\n                onChange={evt => setName(evt.target.value)}\r\n            />\r\n        </Container>\r\n    )\r\n}","import React from \"react\";\r\nimport { useTaskTypes } from \"utils/task-type\";\r\nimport { IdSelect } from \"./id-select\";\r\n\r\nexport const TaskTypeSelect = (props:React.ComponentProps<typeof IdSelect>) => {\r\n    const {data:taskTypes} = useTaskTypes();\r\n    return (\r\n        <IdSelect options={taskTypes || []} {...props}/>\r\n    )\r\n}","import { Button, Input } from \"antd\";\r\nimport { Row } from \"components/lib\";\r\nimport { TaskTypeSelect } from \"components/task-type-select\";\r\nimport { UserSelect } from \"components/user-select\";\r\nimport React from \"react\"\r\nimport { useSetUrlSearchParam } from \"utils/url\";\r\nimport { useTasksSearchParams } from \"./util\"\r\n\r\nexport const SearchPanel = () => {\r\n    const searchParams = useTasksSearchParams();\r\n    const setSearchParams = useSetUrlSearchParam();\r\n    const reset = () => {\r\n        setSearchParams({\r\n            typeId: undefined,\r\n            processorId: undefined,\r\n            tagId: undefined,\r\n            name: undefined,\r\n        });\r\n    }\r\n    return (\r\n        <Row marginBottom={4} gap={true}>\r\n            <Input\r\n                style={{ width: '20rem' }}\r\n                placeholder={'任务名'}\r\n                value={setSearchParams.name}\r\n                onChange={evt => setSearchParams({ name: evt.target.value })} />\r\n            <UserSelect\r\n                defaultOptionName={'经办人'}\r\n                value={searchParams.processorId}\r\n                onChange={value => setSearchParams({ processorId: value })}\r\n            />\r\n            <TaskTypeSelect\r\n                defaultOptionName={'类型'}\r\n                value={searchParams.typeId}\r\n                onChange={value => setSearchParams({ typeId: value })} />\r\n            <Button onClick={reset}>清除筛选器</Button>\r\n        </Row>\r\n    )\r\n}","import { useForm } from \"antd/lib/form/Form\";\r\nimport { Modal, Form, Input, Button } from \"antd\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDeleteTask, useEditTask } from \"utils/task\";\r\nimport { useTaskModal, useTasksQuerkey } from \"./util\";\r\nimport { UserSelect } from \"components/user-select\";\r\nimport { TaskTypeSelect } from \"components/task-type-select\";\r\n\r\n// form样式\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 }\r\n}\r\n\r\nexport const TaskModal = () => {\r\n    const [form] = useForm();\r\n    const { editingTask, editingTaskId, close } = useTaskModal();\r\n    const { mutateAsync: editTask, isLoading: editLoading } = useEditTask(useTasksQuerkey());\r\n    const {mutate: deleteTask} = useDeleteTask(useTasksQuerkey());\r\n    \r\n    const onCancel = () => {\r\n        close();\r\n        // 表单重置\r\n        form.resetFields();\r\n    }\r\n    const onOk = async () => {\r\n        await editTask({ ...editingTask, ...form.getFieldsValue() });\r\n        close()\r\n    }\r\n\r\n    const startDelete = () => {\r\n        close();\r\n        Modal.confirm({\r\n            okText: '确定',\r\n            cancelText: '取消',\r\n            title: '确定删除任务吗',\r\n            onOk() {\r\n                return deleteTask({ id: Number(editingTaskId) })\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        form.setFieldsValue(editingTask);\r\n    }, [editingTask, form])\r\n\r\n    return (\r\n        <Modal\r\n            forceRender={true}\r\n            onCancel={onCancel}\r\n            onOk={onOk}\r\n            okText={'确认'}\r\n            cancelText={'取消'}\r\n            confirmLoading={editLoading}\r\n            visible={!!editingTaskId}\r\n            title={'编辑任务'}>\r\n            <Form\r\n                {...layout}\r\n                initialValues={editingTask}\r\n                form={form}>\r\n                <Form.Item\r\n                    label={'任务名'}\r\n                    name={'name'}\r\n                    rules={[{ required: true, message: '请输入任务名' }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label={'经办人'}\r\n                    name={'processorId'}>\r\n                    <UserSelect defaultOptionName={'经办人'} />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label={'类型'}\r\n                    name={'typeId'}>\r\n                    <TaskTypeSelect />\r\n                </Form.Item>\r\n            </Form>\r\n            <div style={{ textAlign: 'right' }}>\r\n                <Button onClick={startDelete} style={{ fontSize: '14px' }} size={'small'}>删除</Button>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}","import styled from \"@emotion/styled\";\r\nimport { Spin } from \"antd\";\r\nimport { Drag, Drop, DropChild } from \"components/drag-and-drop\";\r\nimport { ScreenContainer } from \"components/lib\";\r\nimport React, { useCallback } from \"react\";\r\nimport { DragDropContext, DropResult } from \"react-beautiful-dnd\";\r\nimport { useDocumentTitle } from \"utils\";\r\nimport { useKanbans, useReorderKanban } from \"utils/kanban\";\r\nimport { useReorderTask, useTasks } from \"utils/task\";\r\nimport { CreateKanban } from \"./create-kanban\";\r\nimport { KanbanColumn } from \"./kanban-column\";\r\nimport { SearchPanel } from \"./search-panel\";\r\nimport { TaskModal } from \"./task-modal\";\r\nimport { useKanbanSearchParams, useKanbansQuerkey, useProjectInurl, useTasksQuerkey, useTasksSearchParams } from \"./util\";\r\n\r\nexport const KanbanScreen = () => {\r\n    useDocumentTitle('看板列表');\r\n    const { data: currentProject } = useProjectInurl();\r\n    // 只显示与之相对应的数据\r\n    const { data: kanbans, isLoading: kanbanIsLoading } = useKanbans(useKanbanSearchParams());\r\n    // const { data: kanbans } = useKanbans();\r\n    const { isLoading: taskIsLoading } = useTasks(useTasksSearchParams());\r\n    // 真正的isLoading\r\n    const isLoading = taskIsLoading || kanbanIsLoading;\r\n\r\n    const onDragEnd = useDragEnd();\r\n    return (\r\n        // onDragEnd 结束的时候做一些事情，持久化的工作\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n            <ScreenContainer>\r\n                <h1>{currentProject?.name}看板</h1>\r\n                <SearchPanel />\r\n                {isLoading ?\r\n                    (<Spin size={'large'} />) :\r\n                    (<ColumnsContainer>\r\n                        <Drop type={'COLUMN'} direction={'horizontal'} droppableId={'kanban'}>\r\n                            <DropChild style={{ display: 'flex' }}>\r\n                                {kanbans?.map((kanban, index) =>\r\n                                    <Drag\r\n                                        key={kanban.id}\r\n                                        draggableId={'kanban' + kanban.id}\r\n                                        index={index}\r\n                                    >\r\n                                        <KanbanColumn kanban={kanban} key={kanban.id} />\r\n                                    </Drag>\r\n                                )}\r\n                            </DropChild>\r\n                        </Drop>\r\n                        <CreateKanban />\r\n                    </ColumnsContainer>\r\n                    )}\r\n                <TaskModal />\r\n            </ScreenContainer>\r\n        </DragDropContext>\r\n    )\r\n}\r\n\r\nexport const useDragEnd = () => {\r\n    const { data: kanbans } = useKanbans(useKanbanSearchParams());\r\n    const { mutate: reorderKanban } = useReorderKanban(useKanbansQuerkey());\r\n    const { mutate: reorderTask } = useReorderTask(useTasksQuerkey());\r\n    const { data: allTasks = [] } = useTasks(useTasksSearchParams());\r\n    return useCallback(({ source, destination, type }: DropResult) => {\r\n        if (!destination) {\r\n            return\r\n        }\r\n        // 看板排序\r\n        if (type === 'COLUMN') {\r\n            // 提起来的看板的id\r\n            const fromId = kanbans?.[source.index].id;\r\n            const toId = kanbans?.[destination.index].id;\r\n            if (!fromId || !toId || fromId === toId) {\r\n                return;\r\n            }\r\n            const type = destination.index > source.index ? 'after' : 'before';\r\n            reorderKanban({ fromId, referenceId: toId, type })\r\n        }\r\n        if (type === 'ROW') {\r\n            // + 转变成number\r\n            const fromKanbanId = +source.droppableId;\r\n            const toKanbanId = +destination.droppableId;\r\n            // 不相等则是跨看板排序\r\n            if (fromKanbanId === toKanbanId) {\r\n                return\r\n            }\r\n            const fromTask = allTasks?.filter(task => task.kanbanId === fromKanbanId)[source.index]\r\n            const toTask = allTasks.filter(task => task.kanbanId === toKanbanId)[destination.index]\r\n            if (fromTask?.id === toTask?.id) {\r\n                return\r\n            }\r\n            reorderTask({\r\n                fromId: fromTask?.id,\r\n                referenceId: toTask?.id,\r\n                fromKanbanId,\r\n                toKanbanId,\r\n                type: fromKanbanId === toKanbanId && destination.index > source.index ? 'after' : 'before'\r\n            })\r\n        }\r\n    }, [allTasks, kanbans, reorderKanban, reorderTask])\r\n}\r\n\r\nexport const ColumnsContainer = styled('div')`\r\ndisplay: flex;\r\noverflow-x: scroll;\r\nflex: 1;\r\n`","import { useProjectIdInUrl } from \"screens/kanban/util\";\r\n\r\nexport const useEpicSearchParams = () => ({ projectId: useProjectIdInUrl() });\r\nexport const useEpicsQuerkey = () => ['epics', useEpicSearchParams()];\r\n","import styled from \"@emotion/styled\";\r\nimport { Button, Drawer, DrawerProps, Form, Input, Spin } from \"antd\";\r\nimport { useForm } from \"antd/lib/form/Form\";\r\nimport { ErrorBox } from \"components/lib\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useProjectIdInUrl } from \"screens/kanban/util\";\r\nimport { useAddEpic } from \"utils/epic\";\r\nimport { useEpicsQuerkey } from \"./util\";\r\n\r\nexport const CreateEpic = (props: Pick<DrawerProps, 'visible'> & { onClose: () => void }) => {\r\n    const { mutate: addEpic, isLoading, error } = useAddEpic(useEpicsQuerkey());\r\n    const [form] = useForm();\r\n    const projectId = useProjectIdInUrl();\r\n\r\n    const onFinish = async (values: any) => {\r\n        await addEpic({ ...values, projectId });\r\n        props.onClose()\r\n    }\r\n\r\n    useEffect(() => { form.resetFields() }, [form, props.visible])\r\n\r\n    return (\r\n        <Drawer\r\n            visible={props.visible}\r\n            onClose={props.onClose}\r\n            forceRender={true}\r\n            destroyOnClose={true}\r\n            width={'100%'}>\r\n            <Container>\r\n                {\r\n                    isLoading ? <Spin size={'large'} /> : <>\r\n                        <h1>创建任务组</h1>\r\n                        <ErrorBox error={error} />\r\n                        <Form\r\n                            form={form}\r\n                            layout={'vertical'}\r\n                            style={{ width: '40rem' }}\r\n                            onFinish={onFinish}\r\n                        >\r\n                            <Form.Item\r\n                                label={'名称'}\r\n                                name={'name'}\r\n                                rules={[{ required: true, message: '请输入任务组名' }]}>\r\n                                <Input placeholder={'请输入任务组名称'} />\r\n                            </Form.Item>\r\n                            <Form.Item style={{ textAlign: \"right\" }}>\r\n                                <Button loading={isLoading} type={'primary'} htmlType={'submit'}>提交</Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </>\r\n                }\r\n            </Container>\r\n        </Drawer>\r\n    )\r\n}\r\n\r\nconst Container = styled.div`\r\nheight: 80vh;\r\ndisplay: flex;\r\nflex-direction: column;\r\njustify-content: center;\r\nalign-items: center;\r\n`","import { useHttp } from \"./http\"\r\nimport { QueryKey, useMutation, useQuery } from \"react-query\"\r\nimport { Epic } from \"types/epic\";\r\nimport { useAddConfig, useDeleteConfig } from \"./use-optimistic-options\";\r\n\r\n// 获取看板的hook\r\nexport const useEpics = (param?: Partial<Epic>) => {\r\n    const client = useHttp();\r\n    return useQuery<Epic[]>(['epics', param], () => client('epics', { data: param }))\r\n}\r\n\r\nexport const useAddEpic = (queryKey: QueryKey) => {\r\n    const client = useHttp();\r\n    return useMutation(\r\n        (params: Partial<Epic>) =>\r\n            client(`epics`, {\r\n                data: params,\r\n                method: 'POST',\r\n            }),\r\n        useAddConfig(queryKey)\r\n    )\r\n\r\n}\r\n\r\nexport const useDeleteEpic = (queryKey: QueryKey) => {\r\n    const client = useHttp();\r\n    return useMutation(\r\n        ({ id }: { id: number }) =>\r\n            client(`epics/${id}`, {\r\n                method: 'DELETE',\r\n            }),\r\n\r\n        useDeleteConfig(queryKey)\r\n    )\r\n}\r\n","import { Button, List, Modal } from \"antd\";\r\nimport { Row, ScreenContainer } from \"components/lib\";\r\nimport dayjs from \"dayjs\";\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useProjectInurl } from \"screens/kanban/util\";\r\nimport { Epic } from \"types/epic\";\r\nimport { useDeleteEpic, useEpics } from \"utils/epic\";\r\nimport { useTasks } from \"utils/task\";\r\nimport { CreateEpic } from \"./create-epic\";\r\nimport { useEpicSearchParams, useEpicsQuerkey } from \"./util\";\r\n\r\nexport const EpicScreen = () => {\r\n    const { data: currentProject } = useProjectInurl();\r\n    const { data: epics } = useEpics(useEpicSearchParams());\r\n    const { data: tasks } = useTasks({ projectId: currentProject?.id });\r\n    const { mutate: deleteEpic } = useDeleteEpic(useEpicsQuerkey());\r\n    const [epicCreateOpen, setEpicCreateOpen] = useState(false);\r\n\r\n    const confirmDeleteEpic = (epic: Epic) => {\r\n        Modal.confirm({\r\n            title: `确定删除项目组：${epic.name}`,\r\n            content: \"点击确定删除\",\r\n            okText: \"确定\",\r\n            onOk() {\r\n                deleteEpic({ id: epic.id });\r\n            },\r\n        });\r\n    };\r\n\r\n    return (\r\n        <ScreenContainer>\r\n            <Row between={true}>\r\n                <h1>{currentProject?.name}任务组</h1>\r\n                <Button onClick={() => setEpicCreateOpen(true)} type={'link'}>创建任务组</Button>\r\n            </Row>\r\n            <List\r\n                style={{ overflowY: 'scroll' }}\r\n                dataSource={epics}\r\n                itemLayout={'vertical'}\r\n                renderItem={epic => <List.Item>\r\n                    <List.Item.Meta title={<Row between={true}>\r\n                        <span>{epic.name}</span>\r\n                        <Button type={'link'} onClick={() => confirmDeleteEpic(epic)}>删除</Button>\r\n                    </Row>\r\n                    }\r\n                        description={\r\n                            <div>\r\n                                <div>开始时间:{dayjs(epic.start).format('YYYY-MM-DD')}</div>\r\n                                <div>结束时间:{dayjs(epic.end).format('YYYY-MM-DD')}</div>\r\n                            </div>\r\n                        }\r\n                    />\r\n                    <div>\r\n                        {\r\n                            tasks?.filter(task => task.epicId === epic.id).map(task =>\r\n                                <Link\r\n                                    to={`/projects/${currentProject?.id}/kanban?editingTaskId=${task.id}`}\r\n                                    key={task.id}>\r\n                                    {task.name}\r\n                                </Link>)\r\n                        }\r\n                    </div>\r\n                </List.Item>} />\r\n            <CreateEpic\r\n                onClose={() => setEpicCreateOpen(false)}\r\n                visible={epicCreateOpen}\r\n            />\r\n        </ScreenContainer>\r\n    )\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Route, Routes, Navigate, useLocation } from \"react-router\";\r\nimport { KanbanScreen } from \"screens/kanban\";\r\nimport { EpicScreen } from \"screens/epic\";\r\nimport styled from \"@emotion/styled\";\r\nimport { Menu } from \"antd\";\r\n\r\n// 检测现在是epic还是kanban路由的一个hook\r\nconst useRouteType = () => {\r\n    const units = useLocation().pathname.split('/');\r\n    // 得到最右边的那个地址\r\n    return units[units.length - 1];\r\n}\r\n\r\nexport const ProjectScreen = () => {\r\n    const routeType = useRouteType();\r\n    return (\r\n        <Container>\r\n            {/* <h1>ProjectScreen</h1>\r\n                不再使用这个， 使用抽象出的组件形式来实现\r\n            */}\r\n            <Aside>\r\n                <Menu mode={\"inline\"} selectedKeys={[routeType]}>\r\n                    <Menu.Item key={'kanban'}>\r\n                        <Link to={'kanban'}>看板</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key={'epic'}>\r\n                        <Link to={'epic'}>任务组</Link>\r\n                    </Menu.Item>\r\n                </Menu>\r\n            </Aside>\r\n\r\n            <Main>\r\n                <Routes>\r\n                    {/* projects/:projectId/kanban */}\r\n                    <Route path={'/kanban'} element={<KanbanScreen />} />\r\n                    {/* projects/:projectId/epic */}\r\n                    <Route path={'/epic'} element={<EpicScreen />} />\r\n                    {/* 相当于重定向    replace={true}是为了解决回退不生效的问题 */}\r\n                    <Navigate to={window.location.pathname + '/kanban'} replace={true} />\r\n                </Routes>\r\n            </Main>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst Aside = styled.aside`\r\nbackground-color: rgb(244, 245, 247);\r\ndisplay: flex;\r\n`\r\n\r\nconst Main = styled.div`\r\ndisplay: flex;\r\nbox-shadow: -5px 0 5px -5px rgba(0, 0, 0, 0.1);\r\noverflow: hidden;\r\n`\r\n\r\nconst Container = styled.div`\r\ndisplay: grid;\r\ngrid-template-columns: 16rem 1fr;\r\nwidth: 100%;\r\n`","import styled from \"@emotion/styled\";\r\nimport { Button, Drawer, Form, Input, Spin } from \"antd\";\r\nimport { useForm } from \"antd/lib/form/Form\";\r\nimport { ErrorBox } from \"components/lib\";\r\nimport { UserSelect } from \"components/user-select\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useAddProject, useEditProject } from \"utils/project\";\r\nimport { useProjectModal, useProjectQuerykey } from \"./util\";\r\n\r\nexport const ProjectModal = () => {\r\n    const {\r\n        projectModalOpen,\r\n        close,\r\n        editingProject,\r\n        isLoading\r\n    } = useProjectModal()\r\n    const useMutateProject = editingProject ? useEditProject : useAddProject;\r\n\r\n    const { mutateAsync, error, isLoading: mutateLoading } = useMutateProject(useProjectQuerykey());\r\n    // 重置表单\r\n    const [form] = useForm();\r\n    const onFinish = (values: any) => {\r\n        mutateAsync({ ...editingProject, ...values }).then(() => {\r\n            form.resetFields();\r\n            close()\r\n        })\r\n    }\r\n    // 解决关闭窗口时页面input不清空的bug\r\n    const closeModal = () => {\r\n        form.resetFields();\r\n        close();\r\n    }\r\n    const title = editingProject ? '编辑项目' : '创建项目';\r\n\r\n    useEffect(() => {\r\n        form.setFieldsValue(editingProject)\r\n    }, [editingProject, form])\r\n\r\n    return (\r\n        <Drawer\r\n            forceRender={true}\r\n            onClose={closeModal}\r\n            visible={projectModalOpen}\r\n            width={'100%'}\r\n        >\r\n            <Container>\r\n                {\r\n                    isLoading ? <Spin size={'large'} /> : <>\r\n                        <h1>{title}</h1>\r\n                        <ErrorBox error={error} />\r\n                        <Form\r\n                            form={form}\r\n                            layout={'vertical'}\r\n                            style={{ width: '40rem' }}\r\n                            onFinish={onFinish}\r\n                        >\r\n                            <Form.Item\r\n                                label={'名称'}\r\n                                name={'name'}\r\n                                rules={[{ required: true, message: '请输入项目名' }]}\r\n                            >\r\n                                <Input placeholder={'请输入项目名称'} />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                label={'部门'}\r\n                                name={'organization'}\r\n                                rules={[{ required: true, message: '请输入部门名' }]}\r\n                            >\r\n                                <Input placeholder={'请输入部门名'} />\r\n                            </Form.Item>\r\n                            <Form.Item label={'负责人'} name={'personId'}>\r\n                                <UserSelect defaultOptionName={'负责人'} />\r\n                            </Form.Item>\r\n                            <Form.Item style={{ textAlign: \"right\" }}>\r\n                                <Button\r\n                                    loading={mutateLoading}\r\n                                    type={'primary'}\r\n                                    htmlType={'submit'}\r\n                                >\r\n                                    提交\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </>\r\n                }\r\n            </Container>\r\n            {/* <h1>Project Modal</h1>\r\n            <Button onClick={close}>关闭</Button> */}\r\n        </Drawer>\r\n    )\r\n}\r\n\r\nconst Container = styled.div`\r\nheight: 80vh;\r\ndisplay: flex;\r\njustify-content: center;\r\nflex-direction: column;\r\nalign-items: center;\r\n`","import styled from \"@emotion/styled\";\r\nimport { Divider, List, Popover, Typography } from \"antd\";\r\nimport React from \"react\";\r\nimport { useProjectModal } from \"screens/project-list/util\";\r\nimport { useProjects } from \"utils/project\";\r\nimport { ButtonNoPadding } from \"./lib\";\r\n\r\nexport const ProjectPopover = () => {\r\n    const { data: projects, refetch } = useProjects();\r\n    const { open } = useProjectModal();\r\n    // 把收藏项目遍历出来\r\n    const pinnedProjects = projects?.filter(project => project.pin);\r\n    const content = (\r\n        <ContentContainer>\r\n            <Typography.Text type={'secondary'}>收藏项目</Typography.Text>\r\n            <List>\r\n                {pinnedProjects?.map(project => (\r\n                    <List.Item key={project.id}>\r\n                        <List.Item.Meta title={project.name} />\r\n                    </List.Item>\r\n                ))}\r\n            </List>\r\n            <Divider />\r\n            <ButtonNoPadding\r\n                onClick={open}\r\n                type={'link'}\r\n            >\r\n                创建项目\r\n            </ButtonNoPadding>\r\n        </ContentContainer>\r\n    )\r\n    return (\r\n        <Popover\r\n            onVisibleChange={() => refetch()}\r\n            placement={'bottom'}\r\n            content={content}>\r\n            <span>项目</span>\r\n        </Popover>\r\n    )\r\n}\r\n\r\nconst ContentContainer = styled.div`\r\nmin-width: 30rem;\r\n`","import styled from \"@emotion/styled\";\r\nimport { Divider, List, Popover, Typography } from \"antd\";\r\nimport React from \"react\";\r\nimport { useUsers } from \"utils/user\";\r\n\r\nexport const UserPopover = () => {\r\n    const { data: users, refetch } = useUsers();\r\n\r\n    const content = (\r\n        <ContentContainer>\r\n            <Typography.Text type={'secondary'}>组员列表</Typography.Text>\r\n            <List>\r\n                {users?.map(user => (\r\n                    <List.Item key={user.id}>\r\n                        <List.Item.Meta title={user.name} />\r\n                    </List.Item>\r\n                ))}\r\n            </List>\r\n            <Divider />\r\n        </ContentContainer>\r\n    )\r\n    return (\r\n        <Popover\r\n            onVisibleChange={() => refetch()}\r\n            placement={'bottom'}\r\n            content={content}\r\n        >\r\n            组员\r\n        </Popover>\r\n    )\r\n}\r\n\r\nconst ContentContainer = styled.div`\r\nmin-width: 30rem;\r\n`","// 登录状态的app\r\nimport styled from '@emotion/styled'\r\nimport { ButtonNoPadding, Row } from 'components/lib'\r\nimport { useAuth } from 'context/auth-context'\r\nimport { ReactComponent as SoftwareLogo } from './assets/software-logo.svg'\r\nimport React from 'react'\r\nimport { ProjectListScreen } from 'screens/project-list'\r\nimport { Button, Dropdown, Menu } from 'antd'\r\nimport { Navigate, Route, Routes } from 'react-router'\r\nimport { ProjectScreen } from 'screens/project'\r\nimport { resetRoute } from 'utils'\r\nimport { ProjectModal } from 'screens/project-list/project-modal'\r\nimport { ProjectPopover } from 'components/project-popover'\r\nimport { UserPopover } from 'components/user-popover'\r\n\r\nexport const AuthenticatedApp = () => {\r\n    /* // 状态提升的方法实现创建项目表单\r\n    const [projectModalOpen, setProjectModalOpen] = useState(false); */\r\n    return (\r\n        <Container>\r\n            <PageHeader />\r\n            <Main>\r\n                <Routes>\r\n                    <Route path={'/projects'} element={<ProjectListScreen />} />\r\n                    {/* :projectId,冒号代表后面跟的是一个变量; /*的意思是后面什么都可以，即一个通用的字符串 */}\r\n                    <Route path={'/projects/:projectId/*'} element={<ProjectScreen />} />\r\n                    {/* 相当于重定向 */}\r\n                    <Navigate to={'/projects'} />\r\n                </Routes>\r\n\r\n            </Main>\r\n            {/* 换用url参数管理，就不再需要这种方式\r\n            <ProjectModal projectModalOpen={projectModalOpen} onClose={() => setProjectModalOpen(false)} /> */}\r\n            <ProjectModal />\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst PageHeader = () => {\r\n    return (\r\n        <Header between={true}>\r\n            <HeaderLeft gap={true}>\r\n                <ButtonNoPadding type={'link'} onClick={resetRoute}>\r\n                    <SoftwareLogo width={'18rem'} color={'rgb(38, 132, 255)'} />\r\n                </ButtonNoPadding>\r\n                <ProjectPopover />\r\n                <UserPopover />\r\n            </HeaderLeft>\r\n            <HeaderRight>\r\n                <User />\r\n            </HeaderRight>\r\n        </Header>\r\n    )\r\n}\r\n\r\nconst User = () => {\r\n    const { logout, user } = useAuth()\r\n    return (\r\n        <Dropdown\r\n            overlay={\r\n                <Menu>\r\n                    <Menu.Item key={'logout'}>\r\n                        <Button onClick={logout} type={'link'}>登出</Button>\r\n                    </Menu.Item>\r\n                </Menu>\r\n            }\r\n        >\r\n            {/* dropdown 展示的内容 */}\r\n            <Button type={'link'} onClick={e => e.preventDefault()}>\r\n                {user?.name}\r\n            </Button>\r\n        </Dropdown>\r\n    )\r\n}\r\n\r\nconst Container = styled.div`\r\ndisplay: grid;\r\ngrid-template-rows: 6rem 1fr 6rem;\r\nheight: 100vh;\r\n`;\r\n/* \r\nconst Header = styled.header`\r\ngrid-area: header; \r\ndisplay: flex;\r\nflex-direction: row;\r\nalign-items: center;\r\njustify-content: space-between;\r\n`\r\nconst HeaderLeft = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\n`\r\n使用可以复用的来代替这种写法\r\n*/\r\nconst Header = styled(Row)`\r\npadding: 3.2rem;\r\nbox-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.1);\r\nz-index: 1;\r\n`;\r\nconst HeaderLeft = styled(Row)``;\r\nconst HeaderRight = styled.div``;\r\nconst Main = styled.main`\r\ndisplay: flex;\r\noverflow: hidden;\r\n`;\r\n\r\n\r\n","import React from \"react\";\r\n\r\n// 错误边界用class组件实现\r\n// Component<any, any>两个泛型分为别为P(props), S(state)\r\n/* \r\nprops要传入的属性：\r\nchildren: ReactNode\r\nfallbackRender: 备用方案\r\n*/\r\ntype FallbackRender = (props: { error: Error | null }) => React.ReactElement;\r\n// export class ErrorBoundary extends React.Component<{ children: ReactNode, fallbackRender: FallbackRender }, any> {\r\n// 另一种写法\r\nexport class ErrorBoundary extends React.Component<React.PropsWithChildren<{ fallbackRender: FallbackRender }>, { error: Error | null }> {\r\n    state = { error: null };\r\n\r\n    // 当ErrorBoundary的子组件抛出异常，这里就会接收到并调用下面的方法，并更新state里的error\r\n    static getDerivedStateFromError(error: Error) {\r\n        return { error }\r\n    }\r\n\r\n    render() {\r\n        const {error} = this.state;\r\n        const {fallbackRender, children} = this.props;\r\n        if (error) {\r\n            return fallbackRender({error});\r\n        }\r\n        return children\r\n    }\r\n}","import { useAuth } from 'context/auth-context';\r\nimport React from 'react'\r\nimport { Form, Input } from 'antd'\r\nimport { LongButton } from 'unauthenticated-app';\r\nimport { useAsync } from 'utils/use-async';\r\n\r\n// 传入的参数是为了捕捉错误 \r\nexport const LoginScreen = ({ onError }: { onError: (error: Error) => void }) => {\r\n    const { login } = useAuth();\r\n    const { run, isLoading } = useAsync(undefined, { throwOnError: true });\r\n    /* 不再使用，提取出来到authProvider中\r\n    const login = (param: { username: string, password: string }) => {\r\n        fetch(`${apiUrl}/login`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(param)\r\n        }).then(\r\n            async (response:Response) => {\r\n                if (response.ok) {\r\n                    \r\n                }\r\n            })\r\n    } */\r\n\r\n    // 加上async和await的原因：因为login是异步任务，login调用时就会直接调用onError，但是login还没有完成\r\n    const handleSubmit = async (values: { username: string, password: string }) => {\r\n        try {\r\n            // await login(values); 改成useAsync，可以实现登录时有一个加载的状态。同时由于run返回一个promise，所以不需要await\r\n            await run(login(values))\r\n        } catch (e) {\r\n            onError(e);\r\n        }\r\n    }\r\n    return (\r\n        <Form onFinish={handleSubmit}>\r\n            <Form.Item name={\"username\"} rules={[{ required: true, message: \"请输入用户名\" }]}>\r\n                <Input placeholder={'用户名'} type=\"text\" id={'username'} />\r\n            </Form.Item>\r\n            <Form.Item name={\"password\"} rules={[{ required: true, message: \"请输入密码\" }]}>\r\n                <Input placeholder={'密码'} type=\"password\" id={'password'} />\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <LongButton loading={isLoading} htmlType={'submit'} type={'primary'}>登录</LongButton>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n\r\n","import { useAuth } from 'context/auth-context';\r\nimport React from 'react'\r\nimport { Form, Input } from 'antd'\r\nimport { LongButton } from 'unauthenticated-app';\r\nimport { useAsync } from 'utils/use-async';\r\n\r\n// 传入的参数是为了捕捉错误 \r\nexport const RegisterScreen = ({ onError }: { onError: (error: Error) => void }) => {\r\n    const { register } = useAuth();\r\n    const { run, isLoading } = useAsync(undefined, { throwOnError: true });\r\n    /* 不再使用，提取出来到authProvider中\r\n    const login = (param: { username: string, password: string }) => {\r\n        fetch(`${apiUrl}/login`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(param)\r\n        }).then(\r\n            async (response:Response) => {\r\n                if (response.ok) {\r\n                    \r\n                }\r\n            })\r\n    } */\r\n\r\n    // 加上async和await的原因：因为login是异步任务，login调用时就会直接调用onError，但是login还没有完成\r\n    // 把cpassword单独拿出来，因为他不参与服务器的交互\r\n    const handleSubmit = async ({cpassword, ...values}: { username: string, password: string, cpassword: string }) => {\r\n        if(cpassword !== values.password) {\r\n            onError(new Error('请确认两次输入的密码相同'));\r\n            return;\r\n        }\r\n        try {\r\n            await run(register(values));\r\n        } catch (e) {\r\n            onError(e);\r\n        }\r\n    }\r\n    return (\r\n        <Form onFinish={handleSubmit}>\r\n            <Form.Item name={\"username\"} rules={[{ required: true, message: \"请输入用户名\" }]}>\r\n                <Input placeholder={'用户名'} type=\"text\" id={'username'} />\r\n            </Form.Item>\r\n            <Form.Item name={\"password\"} rules={[{ required: true, message: \"请输入密码\" }]}>\r\n                <Input placeholder={'密码'} type=\"password\" id={'password'} />\r\n            </Form.Item>\r\n            {/* 密码验证 */}\r\n            <Form.Item name={\"cpassword\"} rules={[{ required: true, message: \"请确认密码\" }]}>\r\n                <Input placeholder={'确认密码'} type=\"password\" id={'cpassword'} />\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <LongButton loading={isLoading} htmlType={'submit'} type={'primary'}>注册</LongButton>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/logo.6c866125.svg\";","export default __webpack_public_path__ + \"static/media/left.e74de3ec.svg\";","export default __webpack_public_path__ + \"static/media/right.b423a6cf.svg\";","import { useState } from \"react\"\r\nimport { LoginScreen } from \"./login\"\r\nimport { RegisterScreen } from \"./register\"\r\nimport { Button, Card, Divider } from 'antd'\r\nimport styled from '@emotion/styled'\r\nimport logo from 'assets/logo.svg'\r\nimport left from 'assets/left.svg'\r\nimport right from 'assets/right.svg'\r\nimport { useDocumentTitle } from \"utils\"\r\nimport { ErrorBox } from \"components/lib\"\r\n\r\n// 存储非登录状态\r\nexport const UnauthenticatedApp = () => {\r\n    // 用来切换登录状态，默认是false，即未登录\r\n    const [isRegister, setisRegister] = useState(false)\r\n    // 存储输入账户密码错误的状态\r\n    const [error, setError] = useState<Error | null>(null);\r\n\r\n    // 自定义页面头部名称\r\n    useDocumentTitle('请登录注册以继续');\r\n\r\n    return (\r\n        <Container style={{ display: 'flex', justifyContent: 'center' }}>\r\n            <Header />\r\n            <Background />\r\n            <ShadowCard>\r\n                <Title>\r\n                    {isRegister ? '请注册' : '请登录'}\r\n                </Title>\r\n                <ErrorBox error={error} />\r\n                {/* {error ? <Typography.Text type='danger'>{error.message}</Typography.Text> : null} */}\r\n                {isRegister ? <RegisterScreen onError={setError} /> : <LoginScreen onError={setError} />}\r\n                <Divider />\r\n                <Button type={'link'} onClick={() => setisRegister(!isRegister)}>\r\n                    切换到{isRegister ? '已经有账号了？直接登录' : '没有账号？注册新账号'}\r\n                </Button>\r\n            </ShadowCard>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport const LongButton = styled(Button)`\r\nwidth: 100%;\r\n`\r\n\r\nconst Title = styled.h2`\r\nmargin-bottom: 2.4rem;\r\ncolor: rgb(94, 108, 132);\r\n`\r\n\r\nconst ShadowCard = styled(Card)`\r\nwidth: 40rem;\r\nmin-height: 56rem;\r\npadding: 3.2rem 4rem;\r\nborder-radius: 0.3rem;\r\nbox-sizing:border-box;\r\nbox-shadow:rgba(0, 0, 0, 0.1) 0 0 10px;\r\ntext-align: center;\r\n`\r\n\r\n// Container当做普通的组件来使用\r\nconst Container = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-items: center;\r\nmin-height: 100vh;\r\n`\r\nconst Header = styled.header`\r\nbackground: url(${logo}) no-repeat center;\r\npadding: 5rem 0;\r\nbackground-size: 8rem;\r\nwidth: 100%;\r\n`\r\nconst Background = styled.div`\r\nposition: absolute;\r\nwidth: 100%;\r\nheight: 100%;\r\nbackground-repeat: no-repeat;\r\n/* background-attachment决定了图片是否会随着页面的滑动而滑动 */\r\nbackground-attachment: fixed;\r\nbackground-position: left bottom, right bottom;\r\nbackground-size: calc(((100vw - 40rem)/2) - 3.2rem), calc(((100vw - 40rem)/2) - 3.2rem), cover;\r\nbackground-image: url(${left}), url(${right});\r\n`","import { AuthenticatedApp } from 'authenticated-app';\nimport { ErrorBoundary } from 'components/error-boundary';\nimport { FullPageErrorFallBack } from 'components/lib';\nimport { useAuth } from 'context/auth-context';\nimport React from 'react';\nimport { UnauthenticatedApp } from 'unauthenticated-app';\nimport './App.css';\n// 不再引入，而是使用登录状态的切换\n// import { ProjectListScreen } from 'screens/project-list';\n// import { LoginScreen } from 'screens/login';\n\nfunction App() {\n  const { user } = useAuth()\n\n  return (\n    <div className=\"App\">\n      {/* 添加异常边界 */}\n      <ErrorBoundary fallbackRender={FullPageErrorFallBack}>\n        {user ? <AuthenticatedApp /> : <UnauthenticatedApp />}\n      </ErrorBoundary>\n      {/* <LoginScreen/>\n      <ProjectListScreen/> */}\n\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ReactNode } from \"react\";\r\nimport { AuthProvider } from \"./auth-context\"\r\nimport { QueryClient, QueryClientProvider } from 'react-query'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\n\r\nexport const AppProviders = ({ children }: { children: ReactNode }) => {\r\n    return (\r\n        <QueryClientProvider client={new QueryClient()}>\r\n            <Router>\r\n                <AuthProvider>\r\n                    {children}\r\n                </AuthProvider>\r\n            </Router>\r\n        </QueryClientProvider>\r\n\r\n    )\r\n}","import './whyr'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { loadServer, DevTools } from 'jira-dev-tool'\nimport { AppProviders } from 'context';\n// 为了实现自定义antd的样式\nimport 'antd/dist/antd.less'\n\n\nloadServer(() => ReactDOM.render(\n  <React.StrictMode>\n    <AppProviders>\n      <DevTools/>\n        <App />\n    </AppProviders>\n  </React.StrictMode>,\n  document.getElementById('root')\n))\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}